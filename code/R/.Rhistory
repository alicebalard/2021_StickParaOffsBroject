names(A)[names(A)%in% "trtG1G2"]="patTrt"
A=A[!names(A)%in% "SampleID"] # rm sample ID for fathers, as only one per BP
# Prep G2 df
B=melt(B)
names(B)[names(B)%in% "variable"]="SampleID"
names(B)[names(B)%in% "value"]="G2methylation"
B=merge(B, fullMetadata_OFFS[c("SampleID", "brotherPairID", "trtG1G2", "patTrt")])
B$patTrt[B$patTrt %in% "controlP"]="Control"
B$patTrt[B$patTrt %in% "infectedP"]="Exposed"
AB=merge(A, B)
# When the variables are not continuous but could be ranked then we do not use pearson correlation
# coefficient to find the linear relationship, in this case spearman correlation coefficient comes
# into the scene. Since the spearman correlation coefficient considers the rank of values, the
# correlation test ignores the same ranks to find the p-values as a result we get the warning
# “Cannot compute exact p-value with ties”. This can be avoided by using exact = FALSE inside the cor.test function.
return(cor.test(x = AB$G1methylation, AB$G2methylation, method = "spearman", exact = FALSE ))
}
getCorG1G2methByEffect(myeffect = DMS_G1onlyEffect_4BPmin)
getCorG1G2methByEffect(myeffect = DMS_G2onlyEffect_4BPmin)
getCorG1G2methByEffect(myeffect = DMS_G1G2additiveEffect_4BPmin)
getCorG1G2methByEffect(myeffect = DMS_G1G2interactionEffect_4BPmin)
## And as a regression?
DMSalleffectsDF = data.frame(DMS=c(DMS_G1onlyEffect_4BPmin, DMS_G2onlyEffect_4BPmin, DMS_G1G2additiveEffect_4BPmin, DMS_G1G2interactionEffect_4BPmin),
effect=c(rep("G1", length(DMS_G1onlyEffect_4BPmin)),
rep("G2", length(DMS_G2onlyEffect_4BPmin)),
rep("addit", length(DMS_G1G2additiveEffect_4BPmin)),
rep("inter", length(DMS_G1G2interactionEffect_4BPmin))))
A=methylKit::select(uniteCov6_G1_woSexAndUnknowChrOVERLAP,
which(paste(uniteCov6_G1_woSexAndUnknowChrOVERLAP$chr, uniteCov6_G1_woSexAndUnknowChrOVERLAP$start) %in%
DMSalleffectsDF$DMS))
A=methylKit::select(uniteCov6_G1_woSexAndUnknowChrOVERLAP,
which(paste(uniteCovHALF_G1_woSexAndUnknowChrOVERLAP$chr, uniteCovHALF_G1_woSexAndUnknowChrOVERLAP$start) %in%
DMSalleffectsDF$DMS))
A=methylKit::select(uniteCovHALF_G1_woSexAndUnknowChrOVERLAP,
which(paste(uniteCovHALF_G1_woSexAndUnknowChrOVERLAP$chr, uniteCovHALF_G1_woSexAndUnknowChrOVERLAP$start) %in%
DMSalleffectsDF$DMS))
# G2
B=methylKit::select(uniteCovHALF_G2_woSexAndUnknowChrOVERLAP,
which(paste(uniteCovHALF_G2_woSexAndUnknowChrOVERLAP$chr, uniteCovHALF_G2_woSexAndUnknowChrOVERLAP$start) %in%
DMSalleffectsDF$DMS))
# Methylation values:
DMS=paste(A$chr, A$start)
A=percMethylation(A) %>% data.frame
A$DMS = DMS
B=percMethylation(B) %>% data.frame
B$DMS = DMS
# Prep G1 df
A=melt(A)
names(A)[names(A)%in% "variable"]="SampleID"
names(A)[names(A)%in% "value"]="G1methylation"
A=merge(A, fullMetadata_PAR[c("SampleID", "brotherPairID", "trtG1G2")])
names(A)[names(A)%in% "trtG1G2"]="patTrt"
A=A[!names(A)%in% "SampleID"] # rm sample ID for fathers, as only one per BP
# Prep G2 df
B=melt(B)
names(B)[names(B)%in% "variable"]="SampleID"
names(B)[names(B)%in% "value"]="G2methylation"
B=merge(B, fullMetadata_OFFS[c("SampleID", "brotherPairID", "trtG1G2", "patTrt")])
B$patTrt[B$patTrt %in% "controlP"]="Control"
B$patTrt[B$patTrt %in% "infectedP"]="Exposed"
AB=merge(A, B)
AB=merge(AB, DMSalleffectsDF)
AB$SampleID=as.character(AB$SampleID)
# level effects
AB$effect <- factor(AB$effect,levels = c("G1", "G2", "addit", "inter"))
mod1=lme4::lmer(G2methylation~G1methylation * effect + (1|brotherPairID/SampleID), data=AB)
mod2=lme4::lmer(G2methylation~G1methylation + effect + (1|brotherPairID/SampleID), data=AB)
mod3=lme4::lmer(G2methylation~G1methylation + (1|brotherPairID/SampleID), data=AB)
lmtest::lrtest(mod1, mod2)
lmtest::lrtest(mod1, mod3)
# Set up modelplot
modelPlot <- plot_model(mod1, type = "pred", terms = c("G1methylation", "effect"))+
geom_abline(y=1)+
theme_bw()+
xlim(1,100)+
ylim(0,100)+
xlab("Methylation value of father (%)")+
ylab("Methylation value of offspring (%)")+
ggtitle(NULL)+
guides(color = "none") +
# ggtitle("Predicted values of offspring CpG methylation\n associated with each effect versus their father's")+
scale_color_manual(values = c("#e69f00", "#56b4e9", "#009e73", "#cc79a7"))+
scale_fill_manual(values = c("#e69f00", "#56b4e9", "#009e73", "#cc79a7"))+
theme(plot.margin = margin()) + theme_bw() +
theme(legend.position = "none")
# Define marginal histogram
marginal_distribution2 <- function(x, var, group) {
ggplot(x, aes_string(x = var, fill = group)) +
geom_density(adjust=1.5, alpha=.3) +
# geom_density(adjust=1.5, alpha=.7, aes(y=..count..))+
# geom_histogram(col="black")+
guides(fill = "none") +
scale_fill_manual(values = c("#e69f00", "#56b4e9", "#009e73", "#cc79a7")) +
# theme_void() +
theme(plot.margin = margin())
}
marginal_distribution3 <- function(x, var, group) {
ggplot(x, aes_string(x = var, fill = group)) +
geom_histogram(col="black")+
guides(fill = "none") +
scale_fill_manual(values = c("#e69f00", "#56b4e9", "#009e73", "#cc79a7")) +
# theme_void() +
theme(plot.margin = margin())
}
# Set up marginal histograms & density
x_dens <- marginal_distribution2(AB, "G1methylation", "effect")
x_hist <- marginal_distribution3(AB, "G1methylation", "effect")
y_dens <- marginal_distribution2(AB, "G2methylation", "effect")+coord_flip()
y_hist <- marginal_distribution3(AB, "G2methylation", "effect")+coord_flip()
# Align histograms with scatterplot
aligned_x_hist <- align_plots(x_hist, modelPlot, align = "v")[[1]]
aligned_y_hist <- align_plots(y_hist, modelPlot, align = "h")[[1]]
# Align density with scatterplot
aligned_x_dens <- align_plots(x_dens, modelPlot, align = "v")[[1]]
aligned_y_dens <- align_plots(y_dens, modelPlot, align = "h")[[1]]
pdf(file = "../../dataOut/plotmodelG1methG2meth.pdf", width = 12, height = 6)
# Arrange plots
cowplot::plot_grid(cowplot::plot_grid(
aligned_x_hist, NULL, modelPlot, aligned_y_hist, ncol = 2, nrow = 2, rel_heights = c(0.3, 1), rel_widths = c(1, 0.3)),
cowplot::plot_grid(
aligned_x_dens, NULL, modelPlot, aligned_y_dens, ncol = 2, nrow = 2, rel_heights = c(0.3, 1), rel_widths = c(1, 0.3)
), ncol=2)
dev.off()
# Arrange plots
cowplot::plot_grid(cowplot::plot_grid(
aligned_x_hist, NULL, modelPlot, aligned_y_hist, ncol = 2, nrow = 2, rel_heights = c(0.3, 1), rel_widths = c(1, 0.3)),
cowplot::plot_grid(
aligned_x_dens, NULL, modelPlot, aligned_y_dens, ncol = 2, nrow = 2, rel_heights = c(0.3, 1), rel_widths = c(1, 0.3)
), ncol=2)
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=unique(c(DMS_PaternalEffect_4BPmin, DMS_OffspringEffect_4BPmin)), effect="all effects")
source("~/Documents/pro/Git/StickParaOffsBroject/code/R2/customRfunctions.R")
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=unique(c(DMS_PaternalEffect_4BPmin, DMS_OffspringEffect_4BPmin)), effect="all effects")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
# The SECOND PCA axis is significant in BCI
# [1] "The chosen model is:"
BCI ~ PCA2 + No.Worms + PAT + (1 | brotherPairID) + (1 | Sex) +
PCA2:PAT + No.Worms:PAT
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.71% of the variance in associated with the parasite load (number of worms)
round(B, 2) #22% of the variance in associated with the paternal treatment
round(C, 2) #9.47% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlot <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring")
phenoMethPlot
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_alleffects.pdf", width = 7, height = 5)
phenoMethPlot
dev.off()
### PCA based on all methylation values at DMS positions detected for each effects separately, with imputation of missing values
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G1onlyEffect_4BPmin, effect="G1")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.4% of the variance in associated with the parasite load (number of worms)
round(B, 2) #22.01% of the variance in associated with the paternal treatment
round(C, 2) #9.6% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotG1 <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: G1")
phenoMethPlotG1
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_G1.pdf", width = 7, height = 5)
phenoMethPlotG1
dev.off()
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G2onlyEffect_4BPmin, effect="G2")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.4% of the variance in associated with the parasite load (number of worms)
round(B, 2) #18.88% of the variance in associated with the paternal treatment
round(C, 2) #6.08% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotG2 <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: G2")
phenoMethPlotG2
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_G2.pdf", width = 7, height = 5)
phenoMethPlotG2
dev.off()
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G1G2additiveEffect_4BPmin, effect="additive")
gc()
gc()
gc()
# Each script sources the previous script of the pipeline if needed
source("R08_DMSannotation.R")
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=unique(c(DMS_PaternalEffect_4BPmin, DMS_OffspringEffect_4BPmin)), effect="all effects")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.72% of the variance in associated with the parasite load (number of worms)
round(B, 2) #21.99% of the variance in associated with the paternal treatment
round(C, 2) #9.46% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlot <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring")
phenoMethPlot
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_alleffects.pdf", width = 7, height = 5)
phenoMethPlot
dev.off()
### PCA based on all methylation values at DMS positions detected for each effects separately, with imputation of missing values
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G1onlyEffect_4BPmin, effect="G1")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.41% of the variance in associated with the parasite load (number of worms)
round(B, 2) #22.02% of the variance in associated with the paternal treatment
round(C, 2) #9.6% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotG1 <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: G1")
phenoMethPlotG1
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_G1.pdf", width = 7, height = 5)
phenoMethPlotG1
dev.off()
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G2onlyEffect_4BPmin, effect="G2")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #11.81% of the variance in associated with the parasite load (number of worms)
round(B, 2) #18.88% of the variance in associated with the paternal treatment
round(C, 2) #6.08% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotG2 <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: G2")
phenoMethPlotG2
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_G2.pdf", width = 7, height = 5)
phenoMethPlotG2
dev.off()
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G1G2additiveEffect_4BPmin, effect="additive")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.92% of the variance in associated with the parasite load (number of worms)
round(B, 2) #22.11% of the variance in associated with the paternal treatment
round(C, 2) #9.32% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotadditive <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: additive")
phenoMethPlotadditive
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_additive.pdf", width = 7, height = 5)
phenoMethPlotadditive
dev.off()
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=DMS_G1G2interactionEffect_4BPmin, effect="interaction")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
# The SECOND PCA axis is significant in BCI
# [1] "The chosen model is:"
BCI ~ PCA2 + No.Worms + PAT + (1 | brotherPairID) + (1 | Sex) +
PCA2:No.Worms + PCA2:PAT + No.Worms:PAT + PCA2:No.Worms:PAT
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms +  PCA2:No.Worms +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #14.75% of the variance in associated with the parasite load (number of worms)
round(B, 2) #19.02% of the variance in associated with the paternal treatment
round(C, 2) #7.05% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlotinteraction <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring: interaction")
phenoMethPlotinteraction
# save
pdf(file = "../../dataOut/phenotypeMeth/phenoMethPlot_interaction.pdf", width = 7, height = 5)
phenoMethPlotinteraction
dev.off()
### Annotate the genes linked with axis 2 of the PCA
annotPCAaxisFull <- myHomebrewDMSannotation(DMSvec = paste(RESPCA$CpGPCA2$chr, RESPCA$CpGPCA2$end),
myannotBed12 = annotBed12, myannotGff3 = annotGff3)
# merge with full table to add effect
annotPCAaxisFull = merge(annotPCAaxisFull, allDMSAnnot)
annotPCAaxis = annotPCAaxisFull %>%
dplyr::select(c("GeneSymbol", "feature.name", "Note", "chrom", "nDMSperGenekb", "ENTREZID", "description", "summary", "effect"))%>%
unique
annotPCAaxis
annotPCAaxisFull
# Make PCA and model lmer(BCI ~ PCA1*PCA2*No.Worms*PAT + (1|brotherPairID)+ (1|Sex), data=metadata)
RESPCA <- getPCACpG(DMSvec=unique(c(DMS_PaternalEffect_4BPmin, DMS_OffspringEffect_4BPmin)), effect="all effects")
formula(RESPCA$PCA_percAtDMS_imputed$modSel)
### How much of the BCI variance is explained by each variables?
mod_noworms = lmer(BCI ~ PCA2 + PAT + PCA2:PAT + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPAT = lmer(BCI ~ PCA2 + No.Worms + (1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
mod_noPCA2 = lmer(BCI ~ + No.Worms + PAT + No.Worms:PAT +(1 | brotherPairID) + (1 | Sex),
data = RESPCA$PCA_percAtDMS_imputed$metadata)
# R2c conditional R2 value associated with fixed effects plus the random effects.
A = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noworms)[2])*100
B = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPAT)[2])*100
C = (MuMIn::r.squaredGLMM(RESPCA$PCA_percAtDMS_imputed$modSel)[2] -
MuMIn::r.squaredGLMM(mod_noPCA2)[2])*100
round(A, 2) #10.72% of the variance in associated with the parasite load (number of worms)
round(B, 2) #21.99% of the variance in associated with the paternal treatment
round(C, 2) #9.46% of the variance in associated with the second PCA axis
### Plot of the model
phenoMethPlot <- plot(ggpredict(RESPCA$PCA_percAtDMS_imputed$modSel, terms = c("No.Worms", "PCA2", "PAT")), add.data = TRUE, alpha = .08) +
theme_bw() +
scale_color_gradient(low = "white", high = "red")+
scale_fill_gradient(low = "white", high = "red") +
ylab("Body Condition Index") + xlab("Number of worms")+
ggtitle("Predicted values of Body Condition Index in offspring")
phenoMethPlot
## Save for later
RESPCAgeneral <- RESPCA
################
### Annotate the genes linked with axis 2 of the PCA
annotPCAaxisFull <- myHomebrewDMSannotation(DMSvec = paste(RESPCAgeneral$CpGPCA2$chr, RESPCAgeneral$CpGPCA2$end),
myannotBed12 = annotBed12, myannotGff3 = annotGff3)
# merge with full table to add effect
annotPCAaxisFull = merge(annotPCAaxisFull, allDMSAnnot)
annotPCAaxis = annotPCAaxisFull %>%
dplyr::select(c("GeneSymbol", "feature.name", "Note", "chrom", "nDMSperGenekb", "ENTREZID", "description", "summary", "effect"))%>%
unique
write.csv(annotPCAaxis, "../../dataOut/annotPCA2_1137DMS_437genes.csv", row.names = F)
### Plot annotated Manhattan plots for those 437 genes associated with PCA2!
P=plotManhattanGenesDMS(annotFile = annotPCAaxisFull, GYgynogff = GYgynogff)
P
pdf("../../dataOut/ManhattanPlots1135DMS435genes.pdf", width = 10, height = 3)
P
dev.off()
pdf("../../dataOut/ManhattanPlots1137DMS437genes.pdf", width = 10, height = 3)
P
dev.off()
P
P
dev.off()
### GO term for these CpGs
GO_PCA2_1135DMS = makedfGO(annotPCAaxisFull, gene_universe, effect = "PCAaxis2")
### GO term for these CpGs
GO_PCA2_1137DMS = makedfGO(annotPCAaxisFull, gene_universe, effect = "PCAaxis2")
GOplot <- GO_PCA2_1137DMS %>% ggplot(aes(x=Effect, y = factor(GO.name))) +
geom_point(aes(color = p.value.adjusted, size = genePercent)) +
scale_color_gradient(name="adjusted\np-value", low = "red", high = "blue") +
scale_size_continuous(name = "% of genes")+
theme_bw() + ylab("") + xlab("") +
theme(legend.box.background = element_rect(fill = "#ebebeb", color = "#ebebeb"),
legend.background = element_rect(fill = "#ebebeb", color = "#ebebeb"),
legend.key = element_rect(fill = "#ebebeb", color = "#ebebeb"), legend.position="left") + # grey box for legend
facet_grid(fct_inorder(GO.category)~., scales="free",space = "free")+
scale_y_discrete(labels = function(x) str_wrap(x, width = 20)) # split too long GO names in half
GOplot
pdf(GOplot, file = "../../dataOut/GOplotPCA2.pdf", width = 6, height = 7)
GOplot
dev.off()
################
# GO of 437 genes linked with the 1137 DMS PCA2, split by effect (NB some genes in different effects; genes with at least 1 CpG in one effect)
GO_G1_sub = makedfGO(annotPCAaxisFull[!is.na(annotPCAaxisFull$G1),], gene_universe, effect = "G1")
GO_G2_sub = makedfGO(annotPCAaxisFull[!is.na(annotPCAaxisFull$G2),], gene_universe, effect = "G2")
GO_addit_sub = makedfGO(annotPCAaxisFull[!is.na(annotPCAaxisFull$addit),], gene_universe, effect = "addit")
GO_inter_sub = makedfGO(annotPCAaxisFull[!is.na(annotPCAaxisFull$inter),], gene_universe, effect = "inter")
dfGO_sub = rbind(GO_G1_sub, GO_G2_sub, GO_addit_sub, GO_inter_sub)
### GO plot
GOplot_sub <- dfGO_sub %>% ggplot(aes(x=Effect, y = factor(GO.name))) +
geom_point(aes(color = p.value.adjusted, size = genePercent)) +
scale_color_gradient(name="adjusted\np-value", low = "red", high = "blue") +
scale_size_continuous(name = "% of genes")+
theme_bw() + ylab("") + xlab("Treatments comparison") +
theme(legend.box.background = element_rect(fill = "#ebebeb", color = "#ebebeb"),
legend.background = element_rect(fill = "#ebebeb", color = "#ebebeb"),
legend.key = element_rect(fill = "#ebebeb", color = "#ebebeb"), legend.position="left") + # grey box for legend
facet_grid(fct_inorder(GO.category)~., scales="free",space = "free")+
scale_y_discrete(labels = function(x) str_wrap(x, width = 40)) # split too long GO names in half
GOplot_sub
pdf(GOplot_sub, file = "../../dataOut/GOplot4Venncat_split.pdf", width = 6, height = 15)
GOplot_sub
dev.off()
## Parents comparison:
diffAnn_PAR = annotateWithGeneParts(as(DMSlist$DMS_15pc_G1_C_T,"GRanges"),annotBed12)
