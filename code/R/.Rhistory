# colnames(PM) %in%
fullMetadata$SampleID[fullMetadata$trtG1G2]
## Calculate average methylation for CC, CT, TC, TT
# colnames(PM) %in%
trts = levels(fullMetadata_OFFS$trtG1G2)
trts
fullMetadata_OFFS$SampleID[fullMetadata_OFFS$trtG1G2 %in% trts[1]]
colnames(PM) %in% fullMetadata_OFFS$SampleID[fullMetadata_OFFS$trtG1G2 %in% trts[1]]
PM[colnames(PM) %in% fullMetadata_OFFS$SampleID[fullMetadata_OFFS$trtG1G2 %in% trts[1]]]
PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[fullMetadata_OFFS$trtG1G2 %in% trts[1]]]
rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[fullMetadata_OFFS$trtG1G2 %in% trts[1]]])
rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]])
trts = levels(fullMetadata_OFFS$trtG1G2)
trts
data.frame(A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
data.frame(A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]))
data.frame(A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]))
data.frame(A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]))
data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df)
names(df) = trts
df
names(df) = paste0("ave_", trts)
names(df)
## Calculate difference Exposed minus Control in both parental group
df$ave_NE_exposed - df$ave_NE_control
## Calculate difference Exposed minus Control in both parental group
data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control)
## Merge with parDMS values
PM
results[[1]]$DMS15pc_1BP_G1
## Merge with parDMS values
merge(results[[1]]$DMS15pc_1BP_G1, df)
## Merge with parDMS values
rbind(results[[1]]$DMS15pc_1BP_G1, df)
## Merge with parDMS values
cbind(results[[1]]$DMS15pc_1BP_G1, df)
PM=percMethylation(results[[1]]$parDMS1BP_G2_hypo)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
df
PM
## Loop over that for all BP:
res = results[[1]]$parDMS1BP_G2_hypo
PM=percMethylation(res)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
df
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control)
res$chr
results[[1]]$DMS15pc_1BP_G1
res$chr
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$chr, start = res$start, end = res$end)
## Loop over that for all BP:
res = results[[1]]$parDMS1BP_G2_hypo
PM=percMethylation(res)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$chr, start = res$start, end = res$end)
## Merge with parDMS values
merge(results[[1]]$DMS15pc_1BP_G1, df)
## Merge with parDMS values
merge(getData(results[[1]]$DMS15pc_1BP_G1), df)
getData(results[[1]]$DMS15pc_1BP_G1)
## Merge with parDMS values
merge(results[[1]]$DMS15pc_1BP_G1, df)
## Merge with parDMS values
merge(res, df)
## Merge with parDMS values
res
## Merge with parDMS values
getData(res)
## Merge with parDMS values
methylKit::getData(res)
## Merge with parDMS values
merge(methylKit::getData(res), df)
PM
results[[1]]$DMS15pc_1BP_G1
## Loop over that for all BP:
res = results[[1]]
PM=percMethylation(res$parDMS1BP_G2_hypo)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hypo$chr, start = res$parDMS1BP_G2_hypo$start,
end = res$parDMS1BP_G2_hypo$end)
## Merge with parDMS values
merge(methylKit::getData(res$parDMS1BP_G2_hypo), df)
res$DMS15pc_1BP_G1
## Merge with parDMS values
merge(res$DMS15pc_1BP_G1, df)
## Merge with parDMS values
merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
## Merge with parDMS values
dfhypo = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
####
nrow(results[[1]]$DMS15pc_1BP_G1)
nrow(results[[1]]$parDMS1BP_G2_hypo) + nrow(results[[1]]$parDMS1BP_G2_hyper)
##############################################################
#### Compare per BP diffmeth in C-T, CC-CT and TC-TT groups ##
nrow(results[[1]]$DMS15pc_1BP_G1)
nrow(results[[1]]$parDMS1BP_G2_hypo) + nrow(results[[1]]$parDMS1BP_G2_hyper)
## Loop over that for all BP:
res = results[[1]]
## Loop over that for all BP:
res = results[[1]]
## Hypo
PM=percMethylation(res$parDMS1BP_G2_hypo)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hypo$chr, start = res$parDMS1BP_G2_hypo$start,
end = res$parDMS1BP_G2_hypo$end)
## Merge with parDMS values
dfhypo = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
## Hyper
PM=percMethylation(res$parDMS1BP_G2_hyper)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hyper$chr, start = res$parDMS1BP_G2_hyper$start,
end = res$parDMS1BP_G2_hyper$end)
## Merge with parDMS values
dfhyper = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
dfhypohyper = rbind(dfhypo, dfhyper)
dfhypohyper
dfhypohyper$meth.diff
dfhypohyper$meth.diff < 0
dfhypohyper$meth.diff < 0 / nrow(dfhypohyper)
sum(dfhypohyper$meth.diff < 0) / nrow(dfhypohyper)
data.frame(percentHyper = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper))
results
results$
## Hypo
PM=percMethylation(res$parDMS1BP_G2_hypo)
## Here all the dataset for each BP are stored (metadata for univariate stats/methylKit object for multivariate)
results <- lapply(vecBP, getG2atParDMSperBP)
results
res
res$DMS15pc_1BP_G1
res$parDMS1BP_G2_hypo
res$dfhypoG2parDMS
res$dfhypoG2parDMS$brotherPairID
unique(res$dfhypoG2parDMS$brotherPairID)
data.frame(BP=unique(res$dfhypoG2parDMS$brotherPairID),
percentHyper_G1 = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper),
percentHyper_G2_CG1 = 1,
percentHyper_G2_EG1 = 1)
dfhypohyper$DiffMeth_CT_NEG1
data.frame(BP=unique(res$dfhypoG2parDMS$brotherPairID),
percentHyper_G1 = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper),
percentHyper_G2_NEG1 = sum(dfhypohyper$DiffMeth_CT_NEG1 > 0) / nrow(dfhypohyper),
percentHyper_G2_EG1 = sum(dfhypohyper$DiffMeth_CT_EG1 > 0) / nrow(dfhypohyper))
result = data.frame(BP=unique(res$dfhypoG2parDMS$brotherPairID),
percentHyper_G1 = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper),
percentHyper_G2_NEG1 = sum(dfhypohyper$DiffMeth_CT_NEG1 > 0) / nrow(dfhypohyper),
percentHyper_G2_EG1 = sum(dfhypohyper$DiffMeth_CT_EG1 > 0) / nrow(dfhypohyper))
getDFpercentHyper(1)
##############################################################
#### Compare per BP diffmeth in C-T, CC-CT and TC-TT groups ##
getDFpercentHyper <- function(i){
## Hypo
PM=percMethylation(res$parDMS1BP_G2_hypo)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hypo$chr, start = res$parDMS1BP_G2_hypo$start,
end = res$parDMS1BP_G2_hypo$end)
## Merge with parDMS values
dfhypo = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
## Hyper
PM=percMethylation(res$parDMS1BP_G2_hyper)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hyper$chr, start = res$parDMS1BP_G2_hyper$start,
end = res$parDMS1BP_G2_hyper$end)
## Merge with parDMS values
dfhyper = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
dfhypohyper = rbind(dfhypo, dfhyper) # NB: positions NOT ordered
result = data.frame(BP=unique(res$dfhypoG2parDMS$brotherPairID),
percentHyper_G1 = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper),
percentHyper_G2_NEG1 = sum(dfhypohyper$DiffMeth_CT_NEG1 > 0) / nrow(dfhypohyper),
percentHyper_G2_EG1 = sum(dfhypohyper$DiffMeth_CT_EG1 > 0) / nrow(dfhypohyper))
return(result)
}
getDFpercentHyper(1)
getDFpercentHyper(2)
getDFpercentHyper(3)
##############################################################
#### Compare per BP diffmeth in C-T, CC-CT and TC-TT groups ##
getDFpercentHyper <- function(i){
res = results[[i]]
## Hypo
PM=percMethylation(res$parDMS1BP_G2_hypo)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hypo$chr, start = res$parDMS1BP_G2_hypo$start,
end = res$parDMS1BP_G2_hypo$end)
## Merge with parDMS values
dfhypo = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
## Hyper
PM=percMethylation(res$parDMS1BP_G2_hyper)
## Calculate average methylation for CC, CT, TC, TT
trts = levels(fullMetadata_OFFS$trtG1G2)
df=data.frame(
A = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[1]]]),
B = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[2]]]),
C = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[3]]]),
D = rowMeans(PM[,colnames(PM) %in% fullMetadata_OFFS$SampleID[
fullMetadata_OFFS$trtG1G2 %in% trts[4]]]))
names(df) = paste0("ave_", trts)
## Calculate difference Exposed minus Control in both parental group
df = data.frame(DiffMeth_CT_NEG1 = df$ave_NE_exposed - df$ave_NE_control,
DiffMeth_CT_EG1 = df$ave_E_exposed - df$ave_E_control,
chr = res$parDMS1BP_G2_hyper$chr, start = res$parDMS1BP_G2_hyper$start,
end = res$parDMS1BP_G2_hyper$end)
## Merge with parDMS values
dfhyper = merge(methylKit::getData(res$DMS15pc_1BP_G1), df)
dfhypohyper = rbind(dfhypo, dfhyper) # NB: positions NOT ordered
result = data.frame(BP=unique(res$dfhypoG2parDMS$brotherPairID),
percentHyper_G1 = sum(dfhypohyper$meth.diff > 0) / nrow(dfhypohyper),
percentHyper_G2_NEG1 = sum(dfhypohyper$DiffMeth_CT_NEG1 > 0) / nrow(dfhypohyper),
percentHyper_G2_EG1 = sum(dfhypohyper$DiffMeth_CT_EG1 > 0) / nrow(dfhypohyper))
return(result)
}
getDFpercentHyper(3)
getDFpercentHyper(1)
vecBP
lapply(1:length(vecBP), getDFpercentHyper)
sapply(1:length(vecBP), getDFpercentHyper)
data.frmae(sapply(1:length(vecBP), getDFpercentHyper))
data.frame(sapply(1:length(vecBP), getDFpercentHyper))
t(data.frame(sapply(1:length(vecBP), getDFpercentHyper)))
data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
## Loop over that for all BP:
dfperchyper = data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
ggplot(dfperchyper, aes(y=percentHyper_G1))+
geom_point(aes(x=percentHyper_G2_NEG1), col = "blue")
ggplot(dfperchyper, aes(y=percentHyper_G1))+
geom_point(aes(x=percentHyper_G2_NEG1))
ggplot(dfperchyper+
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1))
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1))
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1))
dfperchyper$percentHyper_G1
unlist(dfperchyper$percentHyper_G1)
dfperchyper$percentHyper_G1=unlist(dfperchyper$percentHyper_G1)
## Loop over that for all BP:
# dfperchyper = data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
data.frame(t(lapply(1:length(vecBP), getDFpercentHyper)))
## Loop over that for all BP:
dfperchyper = data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
dfperchyper$percentHyper_G2_NEG1=unlist(dfperchyper$percentHyper_G1)
## Loop over that for all BP:
dfperchyper = data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
dfperchyper$percentHyper_G2_NEG1
dfperchyper$BP
dfperchyper$BP = unlist(dfperchyper$BP)
dfperchyper$percentHyper_G1=unlist(dfperchyper$percentHyper_G1)
dfperchyper$percentHyper_G2_NEG1=unlist(dfperchyper$percentHyper_G2_NEG1)
dfperchyper$percentHyper_G2_EG1=unlist(dfperchyper$percentHyper_G2_EG1)
## Loop over that for all BP:
dfperchyper = data.frame(t(sapply(1:length(vecBP), getDFpercentHyper)))
dfperchyper$BP = unlist(dfperchyper$BP)
dfperchyper$percentHyper_G1=unlist(dfperchyper$percentHyper_G1)
dfperchyper$percentHyper_G2_NEG1=unlist(dfperchyper$percentHyper_G2_NEG1)
dfperchyper$percentHyper_G2_EG1=unlist(dfperchyper$percentHyper_G2_EG1)
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1))
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "blue")
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "black") +
geom_point(aes(x=percentHyper_G2_EG1, y=percentHyper_G1), col = "red")
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "black") +
geom_point(aes(x=percentHyper_G2_EG1, y=percentHyper_G1), col = "red") +
geom_abline(slope = 1)
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "black") +
geom_point(aes(x=percentHyper_G2_EG1, y=percentHyper_G1), col = "red") +
geom_abline(slope = 1) +
geom_label(aes(label=BP))
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "black") +
geom_point(aes(x=percentHyper_G2_EG1, y=percentHyper_G1), col = "red") +
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP))
ggplot(dfperchyper)+
geom_point(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1), col = "black") +
geom_point(aes(x=percentHyper_G2_EG1, y=percentHyper_G1), col = "red") +
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label_repel(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label_repel(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
ylab("Percentage of hypermethylated sites among parDMS in G2")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of hypermethylated sites among parDMS in G2")+
ylab("Percentage of hypermethylated sites among parDMS in G1")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of sites where methylation in Exposed is higher than in control among parDMS in G2")+
ylab("Percentage of hypermethylated sites among parDMS in G1")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of parDMS in G2 where methylation Exposed > methylation Control")+
ylab("Percentage of parDMS in G1 where methylation Exposed > methylation Control")
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of parDMS in G2 where methylation Exposed > methylation Control")+
ylab("Percentage of parDMS in G1 where methylation Exposed > methylation Control")+
xlim(0,1)
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of parDMS in G2 where methylation Exposed > methylation Control")+
ylab("Percentage of parDMS in G1 where methylation Exposed > methylation Control")+
xlim(0,1)+ylim(0,1)
ggplot(dfperchyper)+
geom_abline(slope = 1) +
geom_label(aes(x=percentHyper_G2_NEG1, y=percentHyper_G1,label=BP), col = "black")+
geom_label(aes(x=percentHyper_G2_EG1, y=percentHyper_G1,label=BP), col = "red")+
xlab("Percentage of parDMS in G2 where methylation Exposed > methylation Control")+
ylab("Percentage of parDMS in G1 where methylation Exposed > methylation Control")+
xlim(0.25,0.75)+ylim(0.25,0.75)
########################################
# Loading packages
library(CeTF)
# BiocManager::install("CeTF")
## Info: browseVignettes("CeTF")
library(kableExtra)
library(knitr)
library(tidyverse)
########################################
## Load data
# setwd("/home/alice/Documents/pro/Mel-Amin-networks-Project/Stickl-Network/code/")
expressionValuesALL <- read.csv2("../data/log2_cpm_normalized_counts.csv")
########################################
# Loading packages
library(CeTF)
# BiocManager::install("CeTF")
## Info: browseVignettes("CeTF")
library(kableExtra)
library(knitr)
library(tidyverse)
