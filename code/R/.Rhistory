B = DMS_info_G2_G1c_final$DMS[DMS_info_G2_G1c_final$direction %in% "hypo"],
C = DMS_info_G2_G1i_final$DMS[DMS_info_G2_G1i_final$direction %in% "hypo"],
catnames = c("DMS G1\nhypo" , "DMS G2-c\nhypo", "DMS G2-i\nhypo"))
hyperVenn <- myVennFUN(A = DMS_info_G1$DMS[DMS_info_G1$direction %in% "hyper"],
B = DMS_info_G2_G1c_final$DMS[DMS_info_G2_G1c_final$direction %in% "hyper"],
C = DMS_info_G2_G1i_final$DMS[DMS_info_G2_G1i_final$direction %in% "hyper"],
catnames = c("DMS G1\nhyper" , "DMS G2-c\nhyper", "DMS G2-i\nhyper"))
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 3, height = 2.75, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
rm(allVenn, hypoVenn, hyperVenn)
allVenn <- myVennFUN(A = DMS_info_G1$DMS, B = DMS_info_G2_G1c_final$DMS, C = DMS_info_G2_G1i_final$DMS,
catnames = c("DMS G1" , "DMS G2-c", "DMS G2-i"))
hypoVenn <- myVennFUN(A = DMS_info_G1$DMS[DMS_info_G1$direction %in% "hypo"],
B = DMS_info_G2_G1c_final$DMS[DMS_info_G2_G1c_final$direction %in% "hypo"],
C = DMS_info_G2_G1i_final$DMS[DMS_info_G2_G1i_final$direction %in% "hypo"],
catnames = c("DMS G1\nhypo" , "DMS G2-c\nhypo", "DMS G2-i\nhypo"))
hyperVenn <- myVennFUN(A = DMS_info_G1$DMS[DMS_info_G1$direction %in% "hyper"],
B = DMS_info_G2_G1c_final$DMS[DMS_info_G2_G1c_final$direction %in% "hyper"],
C = DMS_info_G2_G1i_final$DMS[DMS_info_G2_G1i_final$direction %in% "hyper"],
catnames = c("DMS G1\nhyper" , "DMS G2-c\nhyper", "DMS G2-i\nhyper"))
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 2.75, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 3.75, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.2, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.3, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=1.5, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 2)))
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 4, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 3)))
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=3, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 5, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 3)))
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=3, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
png(file="Rfigures/VennDMSinhalffish_intersectingCpGs_hyper_hypo.png", width = 5.5, height = 4.5, units = 'in', res = 300)
pushViewport(plotViewport(layout=grid.layout(2, 3)))
pushViewport(plotViewport(layout.pos.col=2, layout.pos.row=1))
grid.draw(allVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=1, layout.pos.row=2))
grid.draw(hypoVenn)
popViewport()
pushViewport(plotViewport(layout.pos.col=3, layout.pos.row=2))
grid.draw(hyperVenn)
dev.off()
source("librariesLoading.R")
source("customRfunctions.R")
source("R02.1_loadMetadata.R")
loadALL = FALSE # only load CpG shared by half fish per trt group
machine="mythinkpad"
source("R02.2_loadMethyldata.R")
uniteCovALL_woSexAndUnknowChr #-> CpG positions shared by all fish
uniteCov6_G1_woSexAndUnknowChrOVERLAP #-> CpG positions shared by half the parents in each trt group, overlapping with the parental ones
uniteCov14_G2_woSexAndUnknowChrOVERLAP#-> CpG positions shared by half the offspring in each trt group, overlapping with the offspring ones
fullMetadata_OFFS$BCI <- residuals(lmer(Wnettofin ~ Slfin * Sex + (1|Family), data=fullMetadata_OFFS))
fullMetadata_PAR$BCI <- residuals(lmer(Wnettofin ~ Slfin + (1|Family), data=fullMetadata_PAR))
modTol <- lme(BCI ~ patTrt + patTrt:No.Worms,random=~1|Family,data=fullMetadata_OFFS)
anova(modTol)
myBCdf <- fullMetadata_OFFS %>% group_by(patTrt, No.Worms) %>%
summarise(BCI = mean(BCI)) %>% data.frame()
ggplot(fullMetadata_OFFS, aes(x=No.Worms, y = BCI, group = patTrt, col = patTrt))+
geom_point() + geom_line(data=myBCdf)+
geom_point(data=myBCdf, aes(fill = patTrt), col = "black", size = 3, pch = 21)+
scale_color_manual(values = c("gray", "red"))+
scale_fill_manual(values = c("gray", "red"))+
theme_bw()
mod1 <- lme(BCI ~ offsTrt * patTrt, random=~1|Family,data=fullMetadata_OFFS)
anova(mod1) # strong significant effect of both offspring trt & paternal + interactions
mod1.2 <- lme(BCI ~  trtG1G2, random=~1|Family,data=fullMetadata_OFFS)
emmeans(mod1.2, list(pairwise ~ trtG1G2), adjust = "tukey")
ggplot(fullMetadata_OFFS, aes(x=trtG1G2, y = BCI, fill=trtG1G2))+
geom_boxplot()+
geom_signif(comparisons = list(c("NE_control", "NE_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 150, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_control")),
map_signif_level=TRUE, annotations="***",
y_position = 200, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 250, tip_length = 0, vjust=0.4) +
scale_fill_manual(values = colOffs)+
theme_bw() + theme(legend.position = "none")
mod1 <- lmer(BCI ~ No.Worms : trtG1G2 + (1|Family) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),],
REML = FALSE)
mod0 <- lmer(BCI ~ No.Worms + (1|Family) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),],
REML = FALSE)
lrtest(mod0, mod1)
modFULL <- lmer(BCI ~ No.Worms : trtG1G2 + (1|Family) + (1|Sex),
data = fullMetadata_OFFS[fullMetadata_OFFS$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modFULL)
pred <- ggpredict(modFULL, terms = c("No.Worms", "trtG1G2"))
plot(pred, add.data = TRUE)+ theme_bw() +
scale_x_continuous(name = "Number of parasites", breaks = 1:10)+
scale_y_continuous("Body Condition Index")+
ggtitle("Predicted values of Body Condition Index")+
scale_color_manual(values = colOffs[c(2,4)])
modFULL <- lmer(BCI ~ No.Worms + (1|Family),
data = fullMetadata_PAR[fullMetadata_PAR$trtG1G2 %in% "Exposed",])
coef(modFULL)
pred <- ggpredict(modFULL, terms = "No.Worms")
plot(pred, add.data = TRUE)+ theme_bw() +
scale_x_continuous(name = "Number of parasites", breaks = 1:10)+
scale_y_continuous("Body Condition Index")+
ggtitle("Predicted values of Body Condition Index")
nrow(fullMetadata)
mean(fullMetadata$M.Seqs_rawReads)
qnorm(0.975)*sd(fullMetadata$M.Seqs_rawReads)/sqrt(nrow(fullMetadata))
mean(fullMetadata$MappingEfficiency.BSBoldvsGynogen)
qnorm(0.975)*sd(fullMetadata$MappingEfficiency.BSBoldvsGynogen)/sqrt(nrow(fullMetadata))
mycalcRMS <- function(myUniteCov, myMetaData){
percMethMat = methylKit::percMethylation(myUniteCov)
percMethDF = data.frame(SampleID = colnames(percMethMat),
Nbr_methCpG = colSums(percMethMat>=70 & !is.na(percMethMat)),#512493
Nbr_coveredCpG = colSums(!is.na(percMethMat)), #1015735
Nbr_NOTcoveredCpG = colSums(is.na(percMethMat)))
percMethDF$RMS_coveredCpG = percMethDF$Nbr_methCpG / percMethDF$Nbr_coveredCpG #0.5045538
myMetaData = merge(myMetaData, percMethDF)
myMetaData$RMS_allCpG_coveredOrNot = myMetaData$Nbr_methCpG / (myMetaData$M.Seqs_rawReads*10e6)
myMetaData$res_Nbr_methCpG_Nbr_coveredCpG = residuals(
lm(myMetaData$Nbr_methCpG ~ myMetaData$Nbr_coveredCpG))
return(myMetaData)
}
fullMetadata_ALL <- mycalcRMS(uniteCovALL_woSexAndUnknowChr, fullMetadata)
fullMetadata_PAR_half <- mycalcRMS(uniteCov6_G1_woSexAndUnknowChrOVERLAP, fullMetadata_PAR)
fullMetadata_OFFS_half  <- mycalcRMS(uniteCov14_G2_woSexAndUnknowChrOVERLAP, fullMetadata_OFFS)
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$Nbr_methCpG, method = "spearman")
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$RMS_coveredCpG, method = "spearman")
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=RMS_coveredCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
cor.test(fullMetadata_PAR_half$Nbr_coveredCpG,
fullMetadata_PAR_half$res_Nbr_methCpG_Nbr_coveredCpG, method = "spearman")
ggplot(fullMetadata_PAR_half, aes(x=Nbr_coveredCpG, y=res_Nbr_methCpG_Nbr_coveredCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = c("grey", "red")) +
theme_bw() + ggtitle(label = "Parents, CpG shared by half fish/trt")
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$Nbr_methCpG, method = "spearman")
ggplot(plotdf, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Number of methylated cytosines") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
fit <- lm(Nbr_methCpG ~ Nbr_coveredCpG, data = fullMetadata_OFFS_half)
plotdf <- fullMetadata_OFFS_half
plotdf$predicted <- predict(fit)   # Save the predicted values
plotdf$residuals <- residuals(fit)
ggplot(plotdf, aes(x=Nbr_coveredCpG, y=Nbr_methCpG))+
geom_smooth(method = "lm", col="black")+
geom_segment(aes(xend = Nbr_coveredCpG, yend = predicted), col = "grey") +
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Number of methylated cytosines") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$RMS_coveredCpG, method = "spearman")
ggplot(fullMetadata_OFFS_half, aes(x=Nbr_coveredCpG, y=RMS_coveredCpG))+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
geom_smooth(method = "lm", col="black")+
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
cor.test(fullMetadata_OFFS_half$Nbr_coveredCpG,
fullMetadata_OFFS_half$res_Nbr_methCpG_Nbr_coveredCpG, method = "spearman")
ggplot(fullMetadata_OFFS_half, aes(x=Nbr_coveredCpG, y=res_Nbr_methCpG_Nbr_coveredCpG))+
geom_point(aes(col=trtG1G2), size = 3)+ scale_color_manual(values = colOffs) +
geom_smooth(method = "lm", col="black")+
scale_x_continuous("Number of cytosines covered") +
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
theme_bw() + ggtitle(label = "Offspring, CpG shared by half fish/trt")
modFull <- lmer(Nbr_methCpG ~ trtG1G2 * Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F) # REML =F for model comparison
mod_noSex <- lmer(Nbr_methCpG ~ trtG1G2 + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
mod_noTrt <- lmer(Nbr_methCpG ~ Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
mod_noInteractions <- lmer(Nbr_methCpG ~ trtG1G2 + Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noSex) # sex is VERY VERY significant p = 0.000851 ***
lrtest(modFull, mod_noTrt) # trt is signif p = 0.01754 *
lrtest(modFull, mod_noInteractions) # interactions are significant 0.01602 *
ggplot(fullMetadata_OFFS_half, aes(trtG1G2, Nbr_methCpG, group=interaction(trtG1G2, Sex))) +
facet_grid(~Sex) +
geom_violin() +
geom_boxplot(aes(fill = trtG1G2), width = 0.2) +
geom_jitter(width = .1, size = 1, pch = 21, fill = "white") +
scale_fill_manual(values = colOffs) +
theme_bw()  + theme(legend.position = "none")
modFull <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 * Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F) # REML =F for model comparison
mod_noSex <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
mod_noTrt <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
mod_noInteractions <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + Sex + (1|Family),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noSex) # sex is significant p = 0.0015 **
lrtest(modFull, mod_noTrt) # trt is not significant any longer
lrtest(modFull, mod_noInteractions) # interactions are are not significant any longer
ggplot(fullMetadata_OFFS_half, aes(trtG1G2, res_Nbr_methCpG_Nbr_coveredCpG,
group=interaction(trtG1G2, Sex))) +
facet_grid(~Sex) +
geom_violin() +
geom_boxplot(aes(fill = trtG1G2), width = 0.2) +
geom_jitter(width = .1, size = 1, pch = 21, fill = "white") +
scale_fill_manual(values = colOffs) +
theme_bw() + theme(legend.position = "none")
modFULL <- lmer(BCI ~ No.Worms : trtG1G2 + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modFULL)[1]
predict <- ggpredict(modFULL, terms = c("No.Worms", "trtG1G2"))
slope_NE_exposed <- predict[predict$group %in% "NE_exposed",][2,2] - predict[predict$group %in% "NE_exposed",][1,2]
slope_E_exposed <- predict[predict$group %in% "E_exposed",][2,2] - predict[predict$group %in% "E_exposed",][1,2]
slope_NE_exposed
meanMeth_NE_exposed <- mean(fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed"),"res_Nbr_methCpG_Nbr_coveredCpG"])
meanMeth_E_exposed <- mean(fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("E_exposed"),"res_Nbr_methCpG_Nbr_coveredCpG"])
df <- data.frame(group = c("NE_exposed", "E_exposed"),
slope = c(slope_NE_exposed, slope_E_exposed),
meanMeth = c(meanMeth_NE_exposed, meanMeth_E_exposed))
ggplot(df, aes(x = slope, y = meanMeth, col =group))+
geom_point() + theme_bw()
modTOLfamsex <- lm(BCI ~ No.Worms : trtG1G2 : Family : Sex,
data = fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modTOLfamsex)[1]
modTOLfamsex <- lm(BCI ~ No.Worms : trtG1G2 : Family : Sex,
data = fullMetadata_OFFS_half[fullMetadata_OFFS_half$trtG1G2 %in% c("NE_exposed", "E_exposed"),])
coef(modTOLfamsex)[1]
predTOLfamsex <- ggpredict(modTOLfamsex, terms = c("trtG1G2", "Family", "Sex"))
plot(predTOLfamsex)
mod1.2 <- lme(BCI ~  trtG1G2, random=~1|Family,data=fullMetadata_OFFS)
emmeans(mod1.2, list(pairwise ~ trtG1G2), adjust = "tukey")
ggplot(fullMetadata_OFFS, aes(x=trtG1G2, y = BCI, fill=trtG1G2))+
geom_boxplot()+
geom_signif(comparisons = list(c("NE_control", "NE_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 150, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_control")),
map_signif_level=TRUE, annotations="***",
y_position = 200, tip_length = 0, vjust=0.4) +
geom_signif(comparisons = list(c("NE_exposed", "E_exposed")),
map_signif_level=TRUE, annotations="***",
y_position = 250, tip_length = 0, vjust=0.4) +
scale_fill_manual(values = colOffs)+
theme_bw() + theme(legend.position = "none")
mod1 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + (1|Family),
data = fullMetadata_PAR_half, REML = F)
mod0 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ 1 + (1|Family),
data = fullMetadata_PAR_half, REML = F)
lrtest(mod1, mod0) # not significant in parents
mod1 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ trtG1G2 + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod0 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ 1 + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
lrtest(mod1, mod0) # not significant in offspring
ggplot(fullMetadata_OFFS_half, aes(x=trtG1G2, y = res_Nbr_methCpG_Nbr_coveredCpG, fill=trtG1G2))+
geom_boxplot()+
scale_x_discrete("Treatment")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_fill_manual(values = colOffs)+
theme_bw() + theme(legend.position = "none")
modFull <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ patTrt * outcome + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noPAT <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ outcome + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noOFF <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ patTrt + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noInt <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ patTrt + outcome + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noPAT) # not significant
lrtest(modFull, mod_noOFF) # not significant
lrtest(modFull, mod_noInt) # not significant
modFull <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ BCI * No.Worms + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noBCI <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ No.Worms + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noNo.Worms <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ BCI + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod_noInt <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ BCI + No.Worms + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
lrtest(modFull, mod_noBCI) # significant p = 0.025 *
lrtest(modFull, mod_noNo.Worms) # not significant
lrtest(modFull, mod_noInt) # not significant
mod1 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ BCI + (1|Family),
data = fullMetadata_PAR_half, REML = F)
mod0 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ 1 + (1|Family),
data = fullMetadata_PAR_half, REML = F)
lrtest(mod1, mod0) # not significant in parents
mod1 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ BCI + (1|Family) + (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
mod0 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG ~ 1 + (1|Family)+ (1|Sex),
data = fullMetadata_OFFS_half, REML = F)
lrtest(mod1, mod0) # VERY significant in offspring p = 0.0057 **
pred <- ggpredict(mod1, terms = c("BCI", "Family", "Sex"), type = "random")
plot(pred, ci = F, add.data = TRUE)
plot(pred, ci = F, add.data = TRUE)+
ggtitle("lala")
plot(pred, ci = F, add.data = TRUE)#+
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")
plot(pred, ci = F, add.data = TRUE)+
coord_flip()
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")
sex.labs <- c("Females", "Males")
names(sex.labs) <- c("F", "M")
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")+
facet_grid(labeller = labeller(Sex = sex.labs))
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")+
facet_grid(.~Sex, labeller = labeller(Sex = sex.labs))
pred
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")+
facet_grid(.~Sex, labeller = labeller(Sex = sex.labs))
plot(pred, ci = F, add.data = TRUE)+
ggtitle("Predicted values of global methylation")+
scale_y_continuous("Residuals of number of methylated cytosines\n on number of cytosines covered") +
scale_x_continuous("Body Condition Index")
