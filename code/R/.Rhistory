## Load previously united data (all 6 treatments)
## uniteCovALL: CpG covered in ALL individuals (has no NAs, useful for exploratory clustering analyses)
#load("/data/SBCS-EizaguirreLab/Alice/StickParaBroOff/Data/05MethylKit/output/uniteCovALL_woSexAndUnknownChr.RData")
base::load("../../gitignore/output/uniteCovALL_woSexAndUnknownChr.RData")
## rename
fullMethylKitObj = uniteCovALL_woSexAndUnknowChr; rm(uniteCovALL_woSexAndUnknowChr)
## Load previously united data (all 6 treatments)
## uniteCovALL: CpG covered in ALL individuals (has no NAs, useful for exploratory clustering analyses)
#load("/data/SBCS-EizaguirreLab/Alice/StickParaBroOff/Data/05MethylKit/output/uniteCovALL_woSexAndUnknownChr.RData")
base::load("../../gitignore/output/uniteCovALL_woSexAndUnknownChr.RData")
## rename
fullMethylKitObj = uniteCovALL_woSexAndUnknowChr; rm(uniteCovALL_woSexAndUnknowChr)
## For further analyses: CpG covered in at least 2 individuals per group
## (Kostas took 2; Melanie is more stringent; let's see which makes sense)
load("../../gitignore/output/uniteCov2_woSexAndUnknownChr.RData")
## rename
AL2MethylKitObj = uniteCov2_woSexAndUnknowChr ; rm(uniteCov2_woSexAndUnknowChr)
##### Create methylkit objects for different analyses:
# create a methylKit object with ONLY the parents - positions shared by AT LEAST 2 INDIVIDUALS
uniteCov2_woSexAndUnknowChr_PAR=reorganize(
AL2MethylKitObj,
sample.ids=fullMetadata_PAR$ID,
treatment=fullMetadata_PAR$trtG1G2_NUM)
## Remove positions with only NA
# methylBase object with 1772152 rows
test <- methylKit::getData(uniteCov2_woSexAndUnknowChr_PAR)
A <- rowSums(is.na(test[grep("coverage", names(test))]))
table(A)#600226 columns have only NAs! Remove that
mynonNAcols <- which(rowSums(is.na(test[grep("coverage", names(test))]))!=24)
## SUBSET TO REMOVE FULL NA ROWS!!!!:
uniteCov2_woSexAndUnknowChr_PAR <- uniteCov2_woSexAndUnknowChr_PAR[mynonNAcols]
rm(test, A,mynonNAcols)
# create a methylKit object with ONLY the offspring - positions shared by ALL
uniteCovALL_woSexAndUnknowChr_OFF=reorganize(
fullMethylKitObj,
sample.ids=fullMetadata_OFFS$ID,
treatment=fullMetadata_OFFS$trtG1G2_NUM)
# create a methylKit object with ONLY the offspring - positions shared by AT LEAST 2 INDIVIDUALS
uniteCov2_woSexAndUnknowChr_OFF=reorganize(
AL2MethylKitObj,
sample.ids=fullMetadata_OFFS$ID,
treatment=fullMetadata_OFFS$trtG1G2_NUM)
# creates a matrix containing percent methylation values
perc.meth=percMethylation(uniteCovALL_woSexAndUnknowChr_OFF)
x=t(perc.meth)
# creates a distance matrix. Method: Bray-Curtis, package vegan
data.dist = vegdist(x, method="bray", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
summary(data.dist)
## Within each family, are paternal treatment, offspring treatment, sex and their interactions
## significantly influencing global methylation?
perm <- how(nperm = 1000) # 1000 permutations
setBlocks(perm) <- with(fullMetadata_OFFS, Family) # define the permutation structure
## Full model
adonis2(data.dist ~ PAT * outcome * Sex, data = fullMetadata_OFFS, permutations = perm)
## remove the non significant interactions
adonis2(data.dist ~ PAT + outcome + Sex, data = fullMetadata_OFFS, permutations = perm)
## Remove 1 factor by turn - backwards simplification
adonis2(data.dist ~ outcome + Sex, data = fullMetadata_OFFS, permutations = perm)
adonis2(data.dist ~ PAT + Sex, data = fullMetadata_OFFS, permutations = perm)
adonis2(data.dist ~ PAT + outcome, data = fullMetadata_OFFS, permutations = perm)
################# PCA
## PCA analysis on our samples: plot a scree plot for importance of components
p=PCASamples(fullMethylKitObj, screeplot=TRUE, obj.return = T) # first axis very important
rm(p)
data.dist  = as.matrix((vegdist(x, "bray")))
summary(data.dist)
## Within each family, are paternal treatment, offspring treatment, sex and their interactions
## significantly influencing global methylation?
perm <- how(nperm = 1000) # 1000 permutations
setBlocks(perm) <- with(fullMetadata_OFFS, Family) # define the permutation structure
## Full model
adonis2(data.dist ~ PAT * outcome * Sex, data = fullMetadata_OFFS, permutations = perm)
## remove the non significant interactions
adonis2(data.dist ~ PAT + outcome + Sex, data = fullMetadata_OFFS, permutations = perm)
## Remove 1 factor by turn - backwards simplification
adonis2(data.dist ~ outcome + Sex, data = fullMetadata_OFFS, permutations = perm)
adonis2(data.dist ~ PAT + Sex, data = fullMetadata_OFFS, permutations = perm)
adonis2(data.dist ~ PAT + outcome, data = fullMetadata_OFFS, permutations = perm)
NMDS <- metaMDS(data.dist)
stressplot(NMDS)
screeplot(NMDS)
#check to see stress of NMDS
stressplot(NMDS)
#extract plotting coordinates
MDS1 = NMDS$points[,1]
MDS2 = NMDS$points[,2]
#create new dataframe with plotting coordinates and variables to test
NMDS2 = data.frame(MDS1 = MDS1, MDS2 = MDS2, Name = metadata$Ã¯..SampleID,
PAT=as.factor(fullMetadata_OFFS$PAT),
outcome=as.factor(fullMetadata_OFFS$outcome),
Sex = as.factor(fullMetadata_OFFS$Sex))
#create new dataframe with plotting coordinates and variables to test
NMDS2 = data.frame(MDS1 = MDS1, MDS2 = MDS2, PAT=as.factor(fullMetadata_OFFS$PAT),
outcome=as.factor(fullMetadata_OFFS$outcome),
Sex = as.factor(fullMetadata_OFFS$Sex))
################### This step is optional, and only necessary if you need to create your own convex hulls  ############
find_hull <- function(my_data) my_data[chull(my_data[,1], my_data[,2]), ]
#function to create convex hulls, though ggplot has the stat_ellipse() function that can do this automatically.
hulls <- ddply(NMDS2, "PAT", find_hull)
ggplot(NMDS2, aes(x=MDS1, y=MDS2, size=Conductivity)) +
geom_point(aes(col=Depth, shape=Type)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(Group2))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=Name, size=11, col=Depth),hjust=1.3, vjust=0, show.legend=F) +
#adding names next to each point h- and vjust change the horizontal and verical placement of the names, and I turned the legend off for this
scale_size_continuous(range=c(4,8), breaks=c(0.75,5,10,15,30,60)) +
#manually changing the size of the points as I'm using size to indicate conductivity
scale_shape_manual(values=c(16,17) ,labels = c("Whole Mat","Mat Cross Section")) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() +
#use a more publication friendly theme, another good one is theme_classic()
theme(legend.text=element_text(size=20),legend.title=element_text(size=20))+
#increase size of the text - this may have been for a poster, so 20 could be huge
guides(shape=guide_legend(override.aes=list(size=5)),col=guide_legend(override.aes=list(size=5)))
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT)))# +
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=Name, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() +
#use a more publication friendly theme, another good one is theme_classic()
theme(legend.text=element_text(size=20),legend.title=element_text(size=20))+
#increase size of the text - this may have been for a poster, so 20 could be huge
guides(shape=guide_legend(override.aes=list(size=5)),col=guide_legend(override.aes=list(size=5)))
#create new dataframe with plotting coordinates and variables to test
NMDS2 = data.frame(MDS1 = MDS1, MDS2 = MDS2, ID = fullMetadata_OFFS$ID,
PAT=as.factor(fullMetadata_OFFS$PAT),
outcome=as.factor(fullMetadata_OFFS$outcome),
Sex = as.factor(fullMetadata_OFFS$Sex))
################### This step is optional, and only necessary if you need to create your own convex hulls  ############
find_hull <- function(my_data) my_data[chull(my_data[,1], my_data[,2]), ]
#function to create convex hulls, though ggplot has the stat_ellipse() function that can do this automatically.
hulls <- ddply(NMDS2, "PAT", find_hull)
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() +
#use a more publication friendly theme, another good one is theme_classic()
theme(legend.text=element_text(size=20),legend.title=element_text(size=20))+
#increase size of the text - this may have been for a poster, so 20 could be huge
guides(shape=guide_legend(override.aes=list(size=5)),col=guide_legend(override.aes=list(size=5)))
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() +
#use a more publication friendly theme, another good one is theme_classic()
theme(legend.text=element_text(size=20),legend.title=element_text(size=10))+
#increase size of the text - this may have been for a poster, so 20 could be huge
guides(shape=guide_legend(override.aes=list(size=5)),col=guide_legend(override.aes=list(size=5)))
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
# without sample 22 outlier that block the view on PCA
uniteCovALL_woSexAndUnknowChr_OFF_no22=reorganize(
uniteCovALL_woSexAndUnknowChr_OFF,
sample.ids=fullMetadata_OFFS_no22$ID,
treatment=fullMetadata_OFFS_no22$trtG1G2)
# without sample 22 outlier that block the view on PCA
fullMetadata_OFFS_no22 <- fullMetadata_OFFS[!fullMetadata_OFFS$ID %in% "S22",]
# without sample 22 outlier that block the view on PCA
uniteCovALL_woSexAndUnknowChr_OFF_no22=reorganize(
uniteCovALL_woSexAndUnknowChr_OFF,
sample.ids=fullMetadata_OFFS_no22$ID,
treatment=fullMetadata_OFFS_no22$trtG1G2)
# creates a matrix containing percent methylation values
perc.meth=percMethylation(uniteCovALL_woSexAndUnknowChr_OFF_no22)
# creates a matrix containing percent methylation values NB rm sample 22!!
perc.meth=percMethylation(uniteCovALL_woSexAndUnknowChr_OFF_no22)
x=t(perc.meth)
# creates a distance matrix. Method: Bray-Curtis, package vegan
data.dist  = as.matrix((vegdist(x, "bray")))
summary(data.dist)
## Within each family, are paternal treatment, offspring treatment, sex and their interactions
## significantly influencing global methylation?
perm <- how(nperm = 1000) # 1000 permutations
setBlocks(perm) <- with(fullMetadata_OFFS, Family) # define the permutation structure
## Full model
adonis2(data.dist ~ PAT * outcome * Sex, data = fullMetadata_OFFS, permutations = perm)
# creates a matrix containing percent methylation values NB rm sample 22!!
perc.meth=percMethylation(uniteCovALL_woSexAndUnknowChr_OFF_no22)
x=t(perc.meth)
# creates a distance matrix. Method: Bray-Curtis, package vegan
data.dist  = as.matrix((vegdist(x, "bray")))
summary(data.dist)
## Within each family, are paternal treatment, offspring treatment, sex and their interactions
## significantly influencing global methylation?
perm <- how(nperm = 1000) # 1000 permutations
setBlocks(perm) <- with(fullMetadata_OFFS, Family) # define the permutation structure
setBlocks(perm) <- with(fullMetadata_OFFS_no22, Family) # define the permutation structure
## Full model
adonis2(data.dist ~ PAT * outcome * Sex, data = fullMetadata_OFFS_no22, permutations = perm)
## remove the non significant interactions
adonis2(data.dist ~ PAT + outcome + Sex, data = fullMetadata_OFFS_no22, permutations = perm)
## Remove 1 factor by turn - backwards simplification
adonis2(data.dist ~ outcome + Sex, data = fullMetadata_OFFS_no22, permutations = perm)
adonis2(data.dist ~ PAT + Sex, data = fullMetadata_OFFS_no22, permutations = perm)
adonis2(data.dist ~ PAT + outcome, data = fullMetadata_OFFS_no22, permutations = perm)
########## NMDS
#Create NMDS based on bray-curtis distances - metaMDS finds the
# most stable NMDS solution by randomly starting from different points in your data
NMDS <- metaMDS(data.dist)
#check to see stress of NMDS
stressplot(NMDS) # very not linear... what to change?
#check to see stress of NMDS
stressplot(NMDS) # very not linear when ID 22 added!!
#extract plotting coordinates
MDS1 = NMDS$points[,1]
MDS2 = NMDS$points[,2]
#create new dataframe with plotting coordinates and variables to test
NMDS2 = data.frame(MDS1 = MDS1, MDS2 = MDS2, ID = fullMetadata_OFFS_no22$ID,
PAT=as.factor(fullMetadata_OFFS_no22$PAT),
outcome=as.factor(fullMetadata_OFFS_no22$outcome),
Sex = as.factor(fullMetadata_OFFS$Sex))
################### This step is optional, and only necessary if you need to create your own convex hulls  ############
find_hull <- function(my_data) my_data[chull(my_data[,1], my_data[,2]), ]
#function to create convex hulls, though ggplot has the stat_ellipse() function that can do this automatically.
hulls <- ddply(NMDS2, "PAT", find_hull)
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
#create new dataframe with plotting coordinates and variables to test
NMDS2 = data.frame(MDS1 = MDS1, MDS2 = MDS2, ID = fullMetadata_OFFS_no22$ID,
PAT=as.factor(fullMetadata_OFFS_no22$PAT),
outcome=as.factor(fullMetadata_OFFS_no22$outcome),
Sex = as.factor(fullMetadata_OFFS_no22$Sex))
################### This step is optional, and only necessary if you need to create your own convex hulls  ############
find_hull <- function(my_data) my_data[chull(my_data[,1], my_data[,2]), ]
#function to create convex hulls, though ggplot has the stat_ellipse() function that can do this automatically.
hulls <- ddply(NMDS2, "PAT", find_hull)
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome)) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 5) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 4) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
#this plots the points, and also changes their size based on my Conductivity measurements - I left it in to provide information on how adaptable ggplot is
stat_ellipse() +
#this should automatically draw 95% confidence elipses around your groupings, but you can play around with the settings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
#scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col),label=c("Shallow","Middle","Deep"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("#66FBFF","#6666FF","#8D8D8D",col))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
col
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("#66FBFF","#6666FF"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("grey","red"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("grey","yellow"))+
#manually adjusting the colours of the points
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
#changing the shape of certain points to indicate what type of microbial mat they came from
theme_bw() #+
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
geom_point(aes(col=Sex, shape=outcome), size = 3) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 3) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 3) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, size=11, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, size=8, col=Sex),hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, col=Sex), size=8, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, col=Sex), size=1, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, col=Sex), show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, col=Sex), size=5, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=ID, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
# geom_text(aes(label=ID, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=PAT, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
# geom_text(aes(label=ID, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
# geom_text(aes(label=ID, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
geom_text(aes(label=PAT, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
ggplot(NMDS2, aes(x=MDS1, y=MDS2)) +
stat_ellipse() + # draw 95% confidence elipses around groupings
geom_polygon(data = hulls, alpha = 0.3, aes(fill=factor(PAT))) +
#use this to draw hulls if you are not using the above function
geom_point(aes(col=Sex, shape=outcome), size = 2) +
scale_shape_manual(values = c(21,20)) +
scale_fill_manual(values = c("grey","yellow"))+
# geom_text(aes(label=ID, col=Sex), size=3, hjust=1.3, vjust=0, show.legend=F) +
theme_bw()
