geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3))
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3))
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3), rel_widths = c(1,1,1.1))
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3), rel_widths = c(1,1,3))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 5)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3))
dev.off()
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 5)
setwd("../../../../Git/StickParaOffsBroject/code/R")
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 5)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3))
dev.off()
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(2,1,3))
dev.off()
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3))
dev.off()
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
dev.off()
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+ theme(panel.spacing = unit(2, "lines"))+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +  ggtitle("") + labs(subtitle = "")
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
dev.off()
P1
P1 +    theme(        plot.background = element_rect(colour = "black", fill=NA, size=5))
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
dev.off()
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+ theme(panel.spacing = unit(1.5, "lines"))+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))+ theme(plot.background = element_rect(colour = "black", fill=NA, size=5))
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
dev.off()
table(fullMetadata_OFFS$brotherPairID, fullMetadata_OFFS$Family)
# Same order of Father's family as in plot 1
fullMetadata_OFFS$Family
# Same order of Father's family as in plot 1
fullMetadata_OFFS$brotherPairID
# Same order of Father's family as in plot 1
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S41"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S113"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S32"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S8"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S91"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S102"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S60"]
fullMetadata_OFFS$brotherPairID[fullMetadata_OFFS$SampleID %in% "S141"]
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Same order of Father's family as in figure 1 (clusters)
dfplot$BP = factor(dfplot$BP, levels = c("BP05", "BP31", "BP04", "BP30", "BP16", "BP34", "BP49","BP46"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+ theme(panel.spacing = unit(1.5, "lines"))+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
plotGeneTarget <- function(myTargetGene, myannotBed12=annotBed12){
# plotdf
dfplot = rbind(DMS_G1onlyEffect_4BPmin_ANNOT[DMS_G1onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G2onlyEffect_4BPmin_ANNOT[DMS_G2onlyEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2additiveEffect_4BPmin_ANNOT[DMS_G1G2additiveEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,],
DMS_G1G2interactionEffect_4BPmin_ANNOT[DMS_G1G2interactionEffect_4BPmin_ANNOT$GeneSymbol %in% myTargetGene,])
# Find TSS position of the gene
dfplot$TSSpos = myannotBed12$TSSes[myannotBed12$TSSes$name %in% dfplot$feature.name]@ranges@start
# Set TSS as origin
dfplot$start_distToTSS = dfplot$start - dfplot$TSSpos
dfplot$end_distToTSS = dfplot$end - dfplot$TSSpos
dfplot$start.gene_distToTSS = dfplot$start.gene - dfplot$TSSpos
dfplot$end.gene_distToTSS = dfplot$end.gene - dfplot$TSSpos
# Reorder effects factor for legend
dfplot$effect <- factor(dfplot$effect, levels = c("G1", "G2", "G1+G2", "G1:G2"))
# Prepare rectangles
mini=min(dfplot$start.gene_distToTSS, dfplot$start_distToTSS)
maxi=max(dfplot$end.gene_distToTSS, dfplot$end_distToTSS)+100
start.gene_distToTSS = unique(dfplot$start.gene_distToTSS)
end.gene_distToTSS = unique(dfplot$end.gene_distToTSS)
# Plot
plotGeneTarget= ggplot(dfplot) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effect, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effect)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
labs(title = paste(unique(dfplot$GeneSymbol), ":", dfplot$description),
subtitle = str_wrap(dfplot$summary, width = 150))+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
####### And by brother pairs
dfplot_BP = merge(df_effects_full[df_effects_full$DMS %in% dfplot$DMS,c("BP", "DMS", "effectBPlevel")], dfplot)
# Rm potision with no effect in this BP
dfplot_BP=dfplot_BP[!is.na(dfplot_BP$effectBPlevel),]
# Same order of Father's family as in figure 1 (clusters)
dfplot_BP$BP = factor(dfplot_BP$BP, levels = c("BP05", "BP31", "BP04", "BP30", "BP16", "BP34", "BP49","BP46"))
# Plot
plotGeneTargetBP = ggplot(dfplot_BP) +
geom_rect(xmin=mini, xmax=maxi, ymin=0, ymax =.5, fill="#bfb6b6")+
geom_rect(aes(xmin=start.gene_distToTSS, xmax=end.gene_distToTSS, ymin=0, ymax =.5), fill = "black")+
geom_point(aes(x = start_distToTSS, y = .8, col = effectBPlevel, pch=featureType), size = 5) +
geom_segment(aes(x = start_distToTSS, xend = start_distToTSS, y=0, yend=.8, col = effectBPlevel)) +
geom_segment(aes(x = 0, xend = 0, y=0, yend=.5), col = "red", size = 3) + # TSS
theme_blank() +
facet_grid(BP~.)+ theme(panel.spacing = unit(1.5, "lines"))+
theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank())+
scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#CC79A7"))#cb friendly palette
return(list(myTargetGene_DMSdf=dfplot, plotGeneTarget=plotGeneTarget, plotGeneTargetBP=plotGeneTargetBP))
}
## All 4 effects:
P = plotGeneTarget(myTargetGene = "FKBP3")
# Zoom in 1
P1 = P$plotGeneTarget + coord_cartesian(xlim=c(3588,3636)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
# Zoom in 2
P2 = P$plotGeneTarget + coord_cartesian(xlim=c(4890,5060)) + theme(legend.position = "none") +
ggtitle("") + labs(subtitle = "")+ theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
## For all BP, zoomed
Pbp1 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(3588,3636))+
theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
Pbp2 = P$plotGeneTargetBP + theme(legend.position = "none") + coord_cartesian(xlim=c(4890,5060))+
theme(plot.background = element_rect(colour = "black", fill=NA, size=1))
table(fullMetadata_OFFS$brotherPairID, fullMetadata_OFFS$Family)
# Plot gene and zooms
pdf("../../dataOut/FKBP3_DMS.pdf", width = 15, height = 15)
cowplot::plot_grid(P$plotGeneTarget,
cowplot::plot_grid(P1, P2, nrow = 1, ncol =2),
cowplot::plot_grid(Pbp1, Pbp2, nrow = 1, ncol =2),
nrow = 3, rel_heights = c(1,1,3), labels = c("A", "B", "C"))
dev.off()
Sys.Date()
