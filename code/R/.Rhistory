### DM from CpG positions shared by half the fish per trt
DMS15pc_G1_half <- readRDS("../../data/DiffMeth/DMS15pc_G1_half.RDS"); nrow(DMS15pc_G1_half) # 3648
DMR15pc_G1_half <- readRDS("../../data/DiffMeth/DMR15pc_G1_half.RDS"); nrow(DMR15pc_G1_half) # 23
### DM from CpG positions shared by all the fish
DMS15pc_G1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G1_ALL.RDS"); nrow(DMS15pc_G1_ALL) # 125
# DMR15pc_G1_ALL returned 0 DMR
## Offspring (brotherPairID & Sex as covariates)
## Control G1 - G2(trt vs control)
### DM from CpG positions shared by half the fish per trt
DMS15pc_G2_controlG1_half <- readRDS("../../data/DiffMeth/DMS15pc_G2_controlG1_half.RDS")
nrow(DMS15pc_G2_controlG1_half) # 1197
DMR15pc_G2_controlG1_half <- readRDS("../../data/DiffMeth/DMR15pc_G2_controlG1_half.RDS")
nrow(DMR15pc_G2_controlG1_half) # 6
### DM from CpG positions shared by all the fish
DMS15pc_G2_controlG1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G2_controlG1_ALL.RDS")
nrow(DMS15pc_G2_controlG1_ALL) # 38
# DMR15pc_G2_controlG1_ALL returned 0 DMR
## Infected G1 - G2(trt vs control)
### DM from CpG positions shared by half the fish per trt
DMS15pc_G2_infectedG1_half <- readRDS("../../data/DiffMeth/DMS15pc_G2_infectedG1_half.RDS")
nrow(DMS15pc_G2_infectedG1_half) # 690
DMR15pc_G2_infectedG1_half <- readRDS("../../data/DiffMeth/DMR15pc_G2_infectedG1_half.RDS")
nrow(DMR15pc_G2_infectedG1_half) # 8
### DM from CpG positions shared by all the fish
DMS15pc_G2_infectedG1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G2_infectedG1_ALL.RDS")
nrow(DMS15pc_G2_infectedG1_ALL) # 22
DMR15pc_G2_infectedG1_ALL <- readRDS("../../data/DiffMeth/DMR15pc_G2_infectedG1_ALL.RDS")
nrow(DMR15pc_G2_infectedG1_ALL) # 1
###########################################
###########################
## Function to get DMS info
myDMSinfo <- function(DMSobject, fromUniteCov){
DMS = paste(DMSobject$chr, DMSobject$start, DMSobject$end)
meth.diff = DMSobject$meth.diff
direction = ifelse(DMSobject$meth.diff > 0, "hyper", "hypo")
percentDMS = length(DMS)/nrow(fromUniteCov)*100
return(list(DMS = DMS, meth.diff = meth.diff, direction = direction, percentDMS = percentDMS))
}
## Run the function
DMS_info_G1 <- myDMSinfo(DMS15pc_G1_half, uniteCov6_G1_woSexAndUnknowChrOVERLAP)
DMS_info_G2_G1c_final <- myDMSinfo(DMS15pc_G2_controlG1_half, uniteCov14_G2_woSexAndUnknowChrOVERLAP)
DMS_info_G2_G1i_final <- myDMSinfo(DMS15pc_G2_infectedG1_half,uniteCov14_G2_woSexAndUnknowChrOVERLAP)
## NB Kostas' results: "We found a total of 1,973 CpG sites out of 1,172,887 CpGs (0.17%)
# across the genome that showed at least 15% differential fractional methylation
# (differentially methylated site [DMS]; q < 0.01) between infected and uninfected fish"
## Here: number of CpG sites
nrow(uniteCov14_G2_woSexAndUnknowChrOVERLAP) # 1,001,880
## Parents comparison:
length(DMS_info_G1$DMS)# 3648 DMS
DMS_info_G1$percentDMS # 0.36% of the CpGs are DMS
## Offspring from control parents comparison:
length(DMS_info_G2_G1c_final$DMS) # 1197 DMS
DMS_info_G2_G1c_final$percentDMS # 0.12% of the CpGs are DMS
## Offspring from infected parents comparison:
length(DMS_info_G2_G1i_final$DMS) # 690 DMS
DMS_info_G2_G1i_final$percentDMS # 0.07% of the CpGs are DMS
####################################################################################
## Question: how are the beta values in the different groups for the parental DMS?##
####################################################################################
##############
## Prepare dataset
##############
PM_G1 <- getPMdataset(uniteCov = uniteCov6_G1_woSexAndUnknowChrOVERLAP, MD = fullMetadata_PAR, gener="parents")
PM_G2 <- getPMdataset(uniteCov = uniteCov14_G2_woSexAndUnknowChrOVERLAP, MD = fullMetadata_OFFS, gener="offspring")
head(PM_G1)
head(PM_G2)
##############
## Plot mean Beta values of offsprings at parental DMS, per trt, along the chromosomes
##############
meanBeta_G2_simple <- PM_G2 %>% group_by(Chr, Pos, Treatment) %>%
dplyr::summarize(Mean = mean(BetaValue, na.rm=TRUE))
names(meanBeta_G2_simple) <- c("Chr", "Pos", "Treatment_G2", "MeanBetaG2")
genome <- GYgynogff %>%
mutate(chrom_nr=chrom %>% deroman(), chrom_order=factor(chrom_nr) %>% as.numeric()) %>%
arrange(chrom_order) %>%
mutate(gstart=lag(length,default=0) %>% cumsum(), gend=gstart+length,
type=LETTERS[2-(chrom_order%%2)],   gmid=(gstart+gend)/2)
mydata = tibble(trt=meanBeta_G2_simple$Treatment_G2, chrom=meanBeta_G2_simple$Chr,
pos=meanBeta_G2_simple$Pos, beta=meanBeta_G2_simple$MeanBetaG2)
mydata$pos <- as.numeric(mydata$pos)
table(mydata$chrom)## check that chrXIX and chrUN are well removed!!
# join DMS and genomic position
data = dplyr::left_join(mydata, genome) %>% dplyr::mutate(gpos=pos+gstart)
# plot:
ggplot()+
geom_rect(data=genome,aes(xmin=gstart,xmax=gend,ymin=-Inf,ymax=Inf,fill=type), alpha=.2)+
geom_point(data=data, aes(x=gpos,y=beta, shape=trt, col=trt),fill="white", size = 1)+
scale_color_manual(values = colOffs)+
scale_shape_manual(values=c(21,21,21,21))+
scale_fill_manual(values=c(A=rgb(.9,.9,.9),B=NA),guide="none")+
scale_x_continuous(breaks=genome$gmid,labels=genome$chrom %>% str_remove(.,"Gy_chr"),
position = "top",expand = c(0,0))+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.line=element_blank(),
axis.title = element_blank(),
strip.placement = "outside")+
facet_grid(trt~.)+
ggtitle("Mean methylation proportions at the 3648 parental DMS for each offspring group")
mydata
genome
data
## Add genome center
genome$gend - genome$
mydata = tibble(trt=meanBeta_G2_simple$Treatment_G2, chrom=meanBeta_G2_simple$Chr,
pos=meanBeta_G2_simple$Pos, beta=meanBeta_G2_simple$MeanBetaG2)
## Add genome center
genome$gend + genome$gstart
## Add genome center
(genome$gend + genome$gstart)/2
mydata
data
genome
data
data$gmid - data$gpos
hist(data$gmid - data$gpos)
abs(data$gmid - data$gpos)
## Add distance to center
data$dist2mid <- abs(data$gmid - data$gpos)
# plot:
ggplot()+
geom_rect(data=genome,aes(xmin=gstart,xmax=gend,ymin=-Inf,ymax=Inf,fill=type), alpha=.2)+
geom_point(data=data, aes(x=gpos,y=beta, shape=trt, col=trt),fill="white", size = 1)+
scale_color_manual(values = colOffs)+
scale_shape_manual(values=c(21,21,21,21))+
scale_fill_manual(values=c(A=rgb(.9,.9,.9),B=NA),guide="none")+
scale_x_continuous(breaks=genome$gmid,labels=genome$chrom %>% str_remove(.,"Gy_chr"),
position = "top",expand = c(0,0))+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.line=element_blank(),
axis.title = element_blank(),
strip.placement = "outside")+
facet_grid(trt~.)+
ggtitle("Mean methylation proportions at the 3648 parental DMS for each offspring group")
data$dist2mid
hist(data$dist2mid)
hist(data$trt)
data$trt
lmer(BetaValue ~ dist2chrCenter + (1|trt), data = data)
data$beta
lmer(beta ~ dist2chrCenter + (1|trt), data = data)
lmer(beta ~ dist2mid + (1|trt), data = data)
data$dist2mid/1000
round(data$dist2mid/1000)
lmer(beta ~ round(data$dist2mid/1000) + (1|trt), data = data)
mod <- lmer(beta ~ dist2mid + (1|trt), data = data)
pred(mod)
predict(mod)
plot(predict(mod))
mod <- lmer(beta ~ dist2mid:chrom + (1|trt), data = data)
mod <- lmer(beta ~ dist2mid:chrom + (1|trt), data = data, REML = F)
mod0 <- lmer(beta ~ dist2mid + (1|trt), data = data, REML = F)
lrtest(mod, mod0)
## check normality of residuals assumption
qqnorm(resid(mod))
qqline(resid(mod))
names(meanBeta_G2_simple) <- c("Chr", "Pos", "Treatment_G2","Sex", "brotherPairID", "MeanBetaG2")
##############
## Plot mean Beta values of offsprings at parental DMS, per trt, along the chromosomes
##############
meanBeta_G2_simple <- PM_G2 %>% group_by(Chr, Pos, Treatment, Sex, brotherPairID) %>%
dplyr::summarize(Mean = mean(BetaValue, na.rm=TRUE))
names(meanBeta_G2_simple) <- c("Chr", "Pos", "Treatment_G2","Sex", "brotherPairID", "MeanBetaG2")
genome <- GYgynogff %>%
mutate(chrom_nr=chrom %>% deroman(), chrom_order=factor(chrom_nr) %>% as.numeric()) %>%
arrange(chrom_order) %>%
mutate(gstart=lag(length,default=0) %>% cumsum(), gend=gstart+length,
type=LETTERS[2-(chrom_order%%2)],   gmid=(gstart+gend)/2)
mydata = tibble(trt=meanBeta_G2_simple$Treatment_G2, sex = meanBeta_G2_simple$Sex, brotherPairID = meanBeta_G2_simple$brotherPairID,
chrom=meanBeta_G2_simple$Chr, pos=meanBeta_G2_simple$Pos, beta=meanBeta_G2_simple$MeanBetaG2)
mydata$pos <- as.numeric(mydata$pos)
table(mydata$chrom)## check that chrXIX and chrUN are well removed!!
# join DMS and genomic position
data = dplyr::left_join(mydata, genome) %>% dplyr::mutate(gpos=pos+gstart)
## Add distance to center
data$dist2mid <- abs(data$gmid - data$gpos)
# plot:
ggplot()+
geom_rect(data=genome,aes(xmin=gstart,xmax=gend,ymin=-Inf,ymax=Inf,fill=type), alpha=.2)+
geom_point(data=data, aes(x=gpos,y=beta, shape=trt, col=trt),fill="white", size = 1)+
scale_color_manual(values = colOffs)+
scale_shape_manual(values=c(21,21,21,21))+
scale_fill_manual(values=c(A=rgb(.9,.9,.9),B=NA),guide="none")+
scale_x_continuous(breaks=genome$gmid,labels=genome$chrom %>% str_remove(.,"Gy_chr"),
position = "top",expand = c(0,0))+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.line=element_blank(),
axis.title = element_blank(),
strip.placement = "outside")+
facet_grid(trt~.)+
ggtitle("Mean methylation proportions at the 3648 parental DMS for each offspring group")
##############
## Plot mean Beta values of offsprings at parental DMS, per trt, along the chromosomes
##############
meanBeta_G2_simple <- PM_G2 %>% group_by(Chr, Pos, Treatment) %>%
dplyr::summarize(Mean = mean(BetaValue, na.rm=TRUE))
names(meanBeta_G2_simple) <- c("Chr", "Pos", "Treatment_G2", "MeanBetaG2")
genome <- GYgynogff %>%
mutate(chrom_nr=chrom %>% deroman(), chrom_order=factor(chrom_nr) %>% as.numeric()) %>%
arrange(chrom_order) %>%
mutate(gstart=lag(length,default=0) %>% cumsum(), gend=gstart+length,
type=LETTERS[2-(chrom_order%%2)],   gmid=(gstart+gend)/2)
mydata = tibble(trt=meanBeta_G2_simple$Treatment_G2,
chrom=meanBeta_G2_simple$Chr, pos=meanBeta_G2_simple$Pos, beta=meanBeta_G2_simple$MeanBetaG2)
mydata$pos <- as.numeric(mydata$pos)
mydata$pos <- as.numeric(mydata$pos)
table(mydata$chrom)## check that chrXIX and chrUN are well removed!!
# join DMS and genomic position
data = dplyr::left_join(mydata, genome) %>% dplyr::mutate(gpos=pos+gstart)
# plot:
ggplot()+
geom_rect(data=genome,aes(xmin=gstart,xmax=gend,ymin=-Inf,ymax=Inf,fill=type), alpha=.2)+
geom_point(data=data, aes(x=gpos,y=beta, shape=trt, col=trt),fill="white", size = 1)+
scale_color_manual(values = colOffs)+
scale_shape_manual(values=c(21,21,21,21))+
scale_fill_manual(values=c(A=rgb(.9,.9,.9),B=NA),guide="none")+
scale_x_continuous(breaks=genome$gmid,labels=genome$chrom %>% str_remove(.,"Gy_chr"),
position = "top",expand = c(0,0))+
theme_minimal()+
theme(panel.grid = element_blank(),
axis.line=element_blank(),
axis.title = element_blank(),
strip.placement = "outside")+
facet_grid(trt~.)+
ggtitle("Mean methylation proportions at the 3648 parental DMS for each offspring group")
###########################################################################################
## TO DO: test hyp that beta value is different (higher?) in the center of the chromosome,
## where there are less recombinations. Test for each chromosome
meanBeta_G2_extended <- PM_G2 %>% group_by(Chr, Pos, Treatment, Sex, brotherPairID) %>%
dplyr::summarize(Mean = mean(BetaValue, na.rm=TRUE))
names(meanBeta_G2_extended) <- c("Chr", "Pos", "Treatment_G2","Sex", "brotherPairID", "MeanBetaG2")
mydata = tibble(trt=meanBeta_G2_extended$Treatment_G2, sex = meanBeta_G2_extended$Sex, brotherPairID = meanBeta_G2_extended$brotherPairID,
chrom=meanBeta_G2_extended$Chr, pos=meanBeta_G2_extended$Pos, beta=meanBeta_G2_extended$MeanBetaG2)
mydata$pos <- as.numeric(mydata$pos)
# join DMS and genomic position
data = dplyr::left_join(mydata, genome) %>% dplyr::mutate(gpos=pos+gstart)
## Add distance to center
data$dist2mid <- abs(data$gmid - data$gpos)
mod <- lmer(beta ~ dist2mid:chrom + (1|trt) + (1|Sex) + (1|brotherPairID), data = data, REML = F)
mod <- lmer(beta ~ dist2mid:chrom + (1|trt) + (1|sex) + (1|brotherPairID), data = data, REML = F)
mod <- lmer(beta ~ dist2mid + (1|trt) + (1|sex) + (1|brotherPairID), data = data, REML = F)
lrtest(mod, mod0) # chromosome matters
mod <- lmer(beta ~ dist2mid:chrom + (1|trt) + (1|sex) + (1|brotherPairID), data = data, REML = F)
mod0 <- lmer(beta ~ dist2mid + (1|trt) + (1|sex) + (1|brotherPairID), data = data, REML = F)
lrtest(mod, mod0) # chromosome matters
## check normality of residuals assumption
qqnorm(resid(mod))
qqline(resid(mod)) # quite skewed
pred <- ggpredict(mod, terms = c("dist2mid","chrom"))
plot(pred)
plot(pred)
pred
mod00 <- lmer(beta ~ chrom + (1|trt) + (1|sex) + (1|brotherPairID), data = data, REML = F)
lrtest(mod0, mod00) # chromosome matters
pred <- ggpredict(mod, terms = c("dist2mid","chrom"))
plot(pred)
plot(pred) +
scale_color_manual(values = 1:20)
pred <- ggpredict(mod, terms = c("dist2mid","chrom", "trt"))
plot(pred) +
scale_color_manual(values = 1:20)
pred <- ggpredict(mod, terms = c("dist2mid","chrom"))
plot(pred) +
scale_color_manual(values = 1:20)
#########################
## Clustering analysis ##
#########################
## Run Adonis to this if clustering is done by treatment
x = percMethMat_uniteCov14_G2_woSexAndUnknowChrOVERLAP[
rownames(percMethMat_uniteCov14_G2_woSexAndUnknowChrOVERLAP) %in% DMS_info_G1$DMS, ]
#########################
## Clustering analysis ##
#########################
## Run Adonis to this if clustering is done by treatment
x = PM_G2[
rownames(PM_G2) %in% DMS_info_G1$DMS, ]
percMethylation(uniteCov14_G2_woSexAndUnknowChrOVERLAP)
DMS_info_G1$DMS
## Transpose
x=t(PM_G2)
## Creates a distance matrix. Method: Bray-Curtis, package vegan
data.dist = as.matrix(vegdist(x, "bray", upper = FALSE, na.rm = T))
x
#########################
## Clustering analysis ##
#########################
## Run Adonis to this if clustering is done by treatment
x = percMethylation(uniteCov14_G2_woSexAndUnknowChrOVERLAP)
## Transpose
x=t(x)
head(x)
## Creates a distance matrix. Method: Bray-Curtis, package vegan
data.dist = as.matrix(vegdist(x, "bray", upper = FALSE, na.rm = T))
## Check that the order is the same than with the metadata
table(fullMetadata_OFFS$SampleID == rownames(data.dist))
#################### Data load & preparation ####################
source("librariesLoading.R")
## load custom functions
source("customRfunctions.R")
## Load samples metadata
source("R02.1_loadMetadata.R")
## define in which machine we're working (apocrita or mythinkpad)
##machine="apocrita"
machine="mythinkpad"
## Load methylation data
loadALL = FALSE # only load CpG shared by half fish per trt group + ALL
source("R02.2_loadMethyldata.R")
## Load file containing length of each gynogen chromosomes
## grep "contig" gitignore/bigdata/Gy_allnoM_rd3.maker_apocrita.noseq_corrected.gff | awk '{print $1, $5}' > data/Gy_allnoM_rd3.maker_apocrita.noseq_corrected_chromoAndLength.txt
GYgynogff = read.table("../../data/Gy_allnoM_rd3.maker_apocrita.noseq_corrected_chromoAndLength.txt")
names(GYgynogff) = c("chrom","length")
###########################################
## Source the previously calculated DMS/DMR
## Parents (brotherPairID as covariates)
### DM from CpG positions shared by half the fish per trt
DMS15pc_G1_half <- readRDS("../../data/DiffMeth/DMS15pc_G1_half.RDS"); nrow(DMS15pc_G1_half) # 3648
DMR15pc_G1_half <- readRDS("../../data/DiffMeth/DMR15pc_G1_half.RDS"); nrow(DMR15pc_G1_half) # 23
### DM from CpG positions shared by all the fish
DMS15pc_G1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G1_ALL.RDS"); nrow(DMS15pc_G1_ALL) # 125
# DMR15pc_G1_ALL returned 0 DMR
## Offspring (brotherPairID & Sex as covariates)
## Control G1 - G2(trt vs control)
### DM from CpG positions shared by half the fish per trt
DMS15pc_G2_controlG1_half <- readRDS("../../data/DiffMeth/DMS15pc_G2_controlG1_half.RDS")
nrow(DMS15pc_G2_controlG1_half) # 1197
DMR15pc_G2_controlG1_half <- readRDS("../../data/DiffMeth/DMR15pc_G2_controlG1_half.RDS")
nrow(DMR15pc_G2_controlG1_half) # 6
### DM from CpG positions shared by all the fish
DMS15pc_G2_controlG1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G2_controlG1_ALL.RDS")
nrow(DMS15pc_G2_controlG1_ALL) # 38
# DMR15pc_G2_controlG1_ALL returned 0 DMR
## Infected G1 - G2(trt vs control)
### DM from CpG positions shared by half the fish per trt
DMS15pc_G2_infectedG1_half <- readRDS("../../data/DiffMeth/DMS15pc_G2_infectedG1_half.RDS")
nrow(DMS15pc_G2_infectedG1_half) # 690
DMR15pc_G2_infectedG1_half <- readRDS("../../data/DiffMeth/DMR15pc_G2_infectedG1_half.RDS")
nrow(DMR15pc_G2_infectedG1_half) # 8
### DM from CpG positions shared by all the fish
DMS15pc_G2_infectedG1_ALL <- readRDS("../../data/DiffMeth/DMS15pc_G2_infectedG1_ALL.RDS")
nrow(DMS15pc_G2_infectedG1_ALL) # 22
DMR15pc_G2_infectedG1_ALL <- readRDS("../../data/DiffMeth/DMR15pc_G2_infectedG1_ALL.RDS")
nrow(DMR15pc_G2_infectedG1_ALL) # 1
###########################################
###########################
## Function to get DMS info
myDMSinfo <- function(DMSobject, fromUniteCov){
DMS = paste(DMSobject$chr, DMSobject$start, DMSobject$end)
meth.diff = DMSobject$meth.diff
direction = ifelse(DMSobject$meth.diff > 0, "hyper", "hypo")
percentDMS = length(DMS)/nrow(fromUniteCov)*100
return(list(DMS = DMS, meth.diff = meth.diff, direction = direction, percentDMS = percentDMS))
}
## Run the function
DMS_info_G1 <- myDMSinfo(DMS15pc_G1_half, uniteCov6_G1_woSexAndUnknowChrOVERLAP)
DMS_info_G2_G1c_final <- myDMSinfo(DMS15pc_G2_controlG1_half, uniteCov14_G2_woSexAndUnknowChrOVERLAP)
DMS_info_G2_G1i_final <- myDMSinfo(DMS15pc_G2_infectedG1_half,uniteCov14_G2_woSexAndUnknowChrOVERLAP)
## NB Kostas' results: "We found a total of 1,973 CpG sites out of 1,172,887 CpGs (0.17%)
# across the genome that showed at least 15% differential fractional methylation
# (differentially methylated site [DMS]; q < 0.01) between infected and uninfected fish"
## Here: number of CpG sites
nrow(uniteCov14_G2_woSexAndUnknowChrOVERLAP) # 1,001,880
## Parents comparison:
length(DMS_info_G1$DMS)# 3648 DMS
DMS_info_G1$percentDMS # 0.36% of the CpGs are DMS
## Offspring from control parents comparison:
length(DMS_info_G2_G1c_final$DMS) # 1197 DMS
DMS_info_G2_G1c_final$percentDMS # 0.12% of the CpGs are DMS
## Offspring from infected parents comparison:
length(DMS_info_G2_G1i_final$DMS) # 690 DMS
DMS_info_G2_G1i_final$percentDMS # 0.07% of the CpGs are DMS
####################################################################################
## Question: how are the beta values in the different groups for the parental DMS?##
####################################################################################
##############
## Prepare dataset
##############
PM_G1 <- getPMdataset(uniteCov = uniteCov6_G1_woSexAndUnknowChrOVERLAP, MD = fullMetadata_PAR, gener="parents")
PM_G2 <- getPMdataset(uniteCov = uniteCov14_G2_woSexAndUnknowChrOVERLAP, MD = fullMetadata_OFFS, gener="offspring")
head(PM_G1)
head(PM_G2)
table(fullMetadata_OFFS$trtG1G2, fullMetadata_OFFS$clutch.ID)
## What is the relative contribution of methylation to brother pair & paternal treatment?
## Test of VCA: variance component analysis https://cran.r-project.org/web/packages/VCA/vignettes/VCA_package_vignette.html
library(VCA)
myfitVCA <- fitVCA(form = BetaValue~(G1_trt+G2_trt)/brotherPairID/CpGSite,
Data = sample_n(PM_G2, 100))
print(myfitVCA, digits=4)
##############
## In parents
##############
parmod <- lmer(data = PM_G1, BetaValue ~ meth.diff.parentals : Treatment + (1|CpGSite) + (1|brotherPairID))
## check normality of residuals assumption
qqnorm(resid(parmod))
qqline(resid(parmod))
pred <- ggpredict(parmod, terms = c("meth.diff.parentals", "Treatment"))
plot(pred, add.data = T)+
scale_color_manual(values = c("black", "red"))+
scale_y_continuous(name = "Beta values")+
scale_x_continuous(name = "Methylation difference between infected and control parents in percentage")+
ggtitle("Predicted methylation ratio (Beta) values in parents\n as a function of differential methylation between exposed and control groups")+
theme_bw()
##############
## Linear model: does the beta value of offspring at DMS depends on treatment Parent x Offspring?
##############
modFull <- lmer(BetaValue ~ (G1_trt * G2_trt):hypohyper + (1|CpGSite) + (1|Sex) + (1|brotherPairID),data = PM_G2, REML = F) # REML =F for model comparison
mod_noG1trt <- lmer(BetaValue ~ G2_trt:hypohyper + (1|CpGSite)+ (1|Sex) + (1|brotherPairID), data = PM_G2, REML = F)
mod_noG2trt <-lmer(BetaValue ~ G1_trt:hypohyper + (1|CpGSite) + (1|Sex) + (1|brotherPairID), data = PM_G2, REML = F)
mod_noInteractions <- lmer(BetaValue ~ (G1_trt + G2_trt):hypohyper + (1|CpGSite) + (1|Sex) + (1|brotherPairID), data = PM_G2, REML = F)
mod_noHypoHyper <- lmer(BetaValue ~ (G1_trt * G2_trt) + (1|CpGSite) + (1|Sex) + (1|brotherPairID), data = PM_G2, REML = F)
## check normality of residuals assumption
qqnorm(resid(modFull))
qqline(resid(modFull))
## Likelihood ratio tests for all variables:
lrtest(modFull, mod_noG1trt) # G1 trt is VERY VERY significant (LRT: χ² (4) = 1163.6, p < 0.001)
lrtest(modFull, mod_noG2trt) # G2 trt is VERY VERY significant (LRT: χ² (4) = 30.02, p < 0.001) NB that changed when brotherpair is used instead of family!
lrtest(modFull, mod_noInteractions) # interactions are significant (LRT: χ² (2) = 9.21, p < 0.01)
lrtest(modFull, mod_noHypoHyper) # hypo/hyper VERY VERY significant (LRT: χ² (4) = 1140, p < 0.001)
## Post-hoc tests between treatments
modFull <- lmer(BetaValue ~ (G1_trt * G2_trt):hypohyper + (1|CpGSite) + (1|Sex) + (1|brotherPairID),data = PM_G2)
modFull_emmeans <- emmeans(modFull, list(pairwise ~ (G1_trt:G2_trt):hypohyper), adjust = "tukey")
modFull_emmeans
P1 <- plot(modFull_emmeans, by = "hypohyper", comparisons = TRUE) +
# coord_flip()+
theme_bw() +
ggtitle("Estimated marginal means of methylation ratio (beta)\n of offspring at parental DMS")+
theme(legend.position = "none", axis.title.x = element_blank()) +
scale_x_continuous("Beta value (methylation ratio)", limits = c(47,69.5))
## NB: Comparison arrows: https://cran.r-project.org/web/packages/emmeans/vignettes/xplanations.html
## two estimated marginal means (EMMs) differ significantly if, and only if, their respective comparison arrows do not overlap
## These comparison arrows are decidedly not the same as confidence intervals.
## Confidence intervals for EMMs are based on the statistical properties of the individual EMMs, whereas comparison arrows
## are based on the statistical properties of differences of EMMs.
## Add the PARENTAL DMS value
## Same test on ALL, G1 and G2 fish
modFullG1 <- lmer(BetaValue ~ G1_trt:hypohyper + (1|CpGSite) + (1|brotherPairID), data = PM_G1)
modFullG1_emmeans <- emmeans(modFullG1, list(pairwise ~ G1_trt:hypohyper), adjust = "tukey")
modFullG1_emmeans
P2 <- plot(modFullG1_emmeans, by = "hypohyper", comparisons = TRUE) +
theme_bw() +
ggtitle("Estimated marginal means of methylation ratio (beta)\n of parents at DMS")+
theme(legend.position = "none", axis.title.x = element_blank()) +
scale_x_continuous("Beta value (methylation ratio)", limits = c(47,69.5))
ggarrange(P2, P1, labels = c("A", "B"), ncol = 1, nrow = 2)
#####################################################################################
## Are the nbr of residuals methylation AT PARENTAL DMS different in the 4 G2 trt? ##
## (for hypo vs hypermeth)? ##
##############################
length(unique(PM_G1$CpGSite))# 3648 positions
PM_G1 %>% dplyr::count(ID)## NB: not all covered in all samples
length(unique(PM_G2$CpGSite[PM_G2$hypohyper %in% "hypo"]))# 1176 positions hypomethylated upon parental inf
length(unique(PM_G2$CpGSite[PM_G2$hypohyper %in% "hyper"]))# 2472 positions hypermethylated upon parental inf
myfun <- function(X){
## Calculate nbr of CpG hypo/hypermethylated per individual, and nbr of covered CpG:
X <- X %>% group_by(ID, Treatment, brotherPairID, clutch.ID, Sex) %>%
dplyr::summarise(ncov = n(),
hypoMeth = sum(BetaValue < 0.3),
hyperMeth = sum(BetaValue > 0.7)) %>% data.frame()
# Calculate residuals of nbr of methCpG by nbr of covered CpG
X$res_Nbr_methCpG_Nbr_coveredCpG_HYPO = residuals(lm(X$hypoMeth ~ X$ncov))
X$res_Nbr_methCpG_Nbr_coveredCpG_HYPER = residuals(lm(X$hyperMeth ~ X$ncov))
## Statistical model: is it different in each offspring trt group?
mod1 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPO ~ Treatment + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X, REML = F)
mod0 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPO ~ 1 + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X, REML = F)
print(lrtest(mod1, mod0))
## Post-hoc test:
modhypo <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPO ~ Treatment + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X)
## pairwise posthoc test
print(emmeans(modhypo, list(pairwise ~ Treatment), adjust = "tukey"))
mod3 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPER ~ Treatment + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X, REML = F)
mod4 <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPER ~ 1 + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X, REML = F)
print(lrtest(mod3, mod4))
## Post-hoc test:
modhyper <- lmer(res_Nbr_methCpG_Nbr_coveredCpG_HYPER ~ Treatment + (1|brotherPairID/clutch.ID) + (1|Sex),
data = X)
## pairwise posthoc test
print(emmeans(modhyper, list(pairwise ~ Treatment), adjust = "tukey"))
## Plot
phypo <- plot(ggpredict(modhypo, terms = c("Treatment")), add.data = TRUE)+
scale_y_continuous("Residuals of number of hypomethylated methylated \ncytosines on number of cytosines covered") +
ggtitle("Predicted residuals nbr of hypomethylated CpG")+
theme_bw()
phyper <- plot(ggpredict(modhyper, terms = c("Treatment")), add.data = TRUE)+
scale_y_continuous("Residuals of number of hypermethylated methylated \n cytosines on number of cytosines covered") +
ggtitle("Predicted residuals nbr of hypermethylated CpG")+
theme_bw()
return(list(phypo, phyper))
}
listplots <- myfun(X = PM_G2[PM_G2$hypohyper %in% "hypo",])
## NOT significant
annotate_figure(ggarrange(listplots[[1]], listplots[[2]],ncol = 2, nrow = 1),
top = text_grob("Parental DMS hypomethylated upon infection, in offspring"))
listplots <- myfun(X = PM_G2[PM_G2$hypohyper %in% "hyper",])
## Treatment SIGNIFICANT in both excess hypo/hyper methylation **
# $`pairwise differences of Treatment`
## HYPO
# 1                       estimate   SE   df t.ratio p.value
# NE_control - E_control     23.71 7.28 10.3   3.257  0.0353
# NE_control - E_exposed     26.88 7.26 10.3   3.701  0.0172
## HYPER
# 1                       estimate   SE   df t.ratio p.value
# NE_control - E_control    -24.06 7.36 10.3  -3.269  0.0348
# NE_control - E_exposed    -27.07 7.34 10.3  -3.687  0.0177
annotate_figure(ggarrange(listplots[[1]], listplots[[2]],ncol = 2, nrow = 1),
top = text_grob("Parental DMS hypermethylated upon infection, in offspring"))
## --> The beta values in parentalDMS in offspring follow the parental pattern hypo/hyper methylated upon infection
